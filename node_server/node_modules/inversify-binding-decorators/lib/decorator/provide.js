/**
 * inversify-binding-decorators v.1.0.0-beta.4 - An utility that allows developers to declare InversifyJS bindings using ES2016 decorators
 * Copyright (c) 2015 Remo H. Jansen <remo.jansen@wolksoftware.com> (http://www.remojansen.com)
 * MIT inversify.io/LICENSE
 * https://github.com/inversify/inversify-binding-decorators#readme
 */
"use strict";
var inversify_1 = require("inversify");
function provide(kernel) {
    return function _provide(serviceIdentifier) {
        var bindingWhenOnSyntax = kernel.bind(serviceIdentifier).to(null);
        return function (target) {
            inversify_1.decorate(inversify_1.injectable(), target);
            var binding = bindingWhenOnSyntax._binding;
            binding.implementationType = target;
            return target;
        };
    };
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = provide;
