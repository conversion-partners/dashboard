/**
 * inversify-binding-decorators v.1.0.0-beta.4 - An utility that allows developers to declare InversifyJS bindings using ES2016 decorators
 * Copyright (c) 2015 Remo H. Jansen <remo.jansen@wolksoftware.com> (http://www.remojansen.com)
 * MIT inversify.io/LICENSE
 * https://github.com/inversify/inversify-binding-decorators#readme
 */
"use strict";
var provide_in_when_on_syntax_1 = require("../syntax/provide_in_when_on_syntax");
var provide_when_syntax_1 = require("../syntax/provide_when_syntax");
var provide_on_syntax_1 = require("../syntax/provide_on_syntax");
var provide_in_syntax_1 = require("../syntax/provide_in_syntax");
var provide_done_syntax_1 = require("../syntax/provide_done_syntax");
function fluentProvide(kernel) {
    return function _fluentProvide(serviceIdentifier) {
        var bindingWhenOnSyntax = kernel.bind(serviceIdentifier).to(null);
        var binding = bindingWhenOnSyntax._binding;
        var provideDoneSyntax = new provide_done_syntax_1.default(binding);
        var provideInWhenOnSyntax = new provide_in_when_on_syntax_1.default(new provide_in_syntax_1.default(bindingWhenOnSyntax, provideDoneSyntax), new provide_when_syntax_1.default(bindingWhenOnSyntax, provideDoneSyntax), new provide_on_syntax_1.default(bindingWhenOnSyntax, provideDoneSyntax));
        return provideInWhenOnSyntax;
    };
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = fluentProvide;
