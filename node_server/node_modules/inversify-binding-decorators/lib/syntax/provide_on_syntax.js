/**
 * inversify-binding-decorators v.1.0.0-beta.4 - An utility that allows developers to declare InversifyJS bindings using ES2016 decorators
 * Copyright (c) 2015 Remo H. Jansen <remo.jansen@wolksoftware.com> (http://www.remojansen.com)
 * MIT inversify.io/LICENSE
 * https://github.com/inversify/inversify-binding-decorators#readme
 */
"use strict";
var provide_when_syntax_1 = require("./provide_when_syntax");
var ProvideOnSyntax = (function () {
    function ProvideOnSyntax(bindingOnSyntax, provideDoneSyntax) {
        this._bindingOnSyntax = bindingOnSyntax;
        this._provideDoneSyntax = provideDoneSyntax;
    }
    ProvideOnSyntax.prototype.onActivation = function (fn) {
        var bindingWhenSyntax = this._bindingOnSyntax.onActivation(fn);
        return new provide_when_syntax_1.default(bindingWhenSyntax, this._provideDoneSyntax);
    };
    ProvideOnSyntax.prototype.done = function () {
        return this._provideDoneSyntax.done();
    };
    return ProvideOnSyntax;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ProvideOnSyntax;
