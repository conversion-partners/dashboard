{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/inversify/lib/annotation/decorator_utils.js","node_modules/inversify/lib/annotation/inject.js","node_modules/inversify/lib/annotation/injectable.js","node_modules/inversify/lib/annotation/multi_inject.js","node_modules/inversify/lib/annotation/named.js","node_modules/inversify/lib/annotation/property_injectors.js","node_modules/inversify/lib/annotation/tagged.js","node_modules/inversify/lib/annotation/target_name.js","node_modules/inversify/lib/bindings/binding.js","node_modules/inversify/lib/bindings/binding_count.js","node_modules/inversify/lib/bindings/binding_scope.js","node_modules/inversify/lib/bindings/binding_type.js","node_modules/inversify/lib/constants/error_msgs.js","node_modules/inversify/lib/constants/metadata_keys.js","node_modules/inversify/lib/inversify.js","node_modules/inversify/lib/kernel/kernel.js","node_modules/inversify/lib/kernel/kernel_snapshot.js","node_modules/inversify/lib/kernel/key_value_pair.js","node_modules/inversify/lib/kernel/lookup.js","node_modules/inversify/lib/planning/context.js","node_modules/inversify/lib/planning/metadata.js","node_modules/inversify/lib/planning/plan.js","node_modules/inversify/lib/planning/planner.js","node_modules/inversify/lib/planning/queryable_string.js","node_modules/inversify/lib/planning/request.js","node_modules/inversify/lib/planning/target.js","node_modules/inversify/lib/resolution/resolver.js","node_modules/inversify/lib/syntax/binding_in_syntax.js","node_modules/inversify/lib/syntax/binding_in_when_on_syntax.js","node_modules/inversify/lib/syntax/binding_on_syntax.js","node_modules/inversify/lib/syntax/binding_to_syntax.js","node_modules/inversify/lib/syntax/binding_when_on_syntax.js","node_modules/inversify/lib/syntax/binding_when_syntax.js","node_modules/inversify/lib/syntax/constraint_helpers.js","src/decorator/fluent_provide.ts","src/decorator/provide.ts","src/factory/fluent_provide_decorator_factory.ts","src/factory/provide_decorator_factory.ts","src/index.ts","src/syntax/provide_done_syntax.ts","src/syntax/provide_in_syntax.ts","src/syntax/provide_in_when_on_syntax.ts","src/syntax/provide_on_syntax.ts","src/syntax/provide_when_on_syntax.ts","src/syntax/provide_when_syntax.ts","src/utils/auto_wire.ts"],"names":[],"mappings":";;;;;;AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChjlFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nfunction tagParameter(annotationTarget, propertyName, parameterIndex, metadata) {\n    var metadataKey = METADATA_KEY.TAGGED;\n    return _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex);\n}\nexports.tagParameter = tagParameter;\nfunction tagProperty(annotationTarget, propertyName, metadata) {\n    var metadataKey = METADATA_KEY.TAGGED_PROP;\n    return _tagParameterOrProperty(metadataKey, annotationTarget.constructor, propertyName, metadata);\n}\nexports.tagProperty = tagProperty;\nfunction _tagParameterOrProperty(metadataKey, annotationTarget, propertyName, metadata, parameterIndex) {\n    var paramsOrPropertiesMetadata = null;\n    var isParameterDecorator = (typeof parameterIndex === \"number\");\n    var key = (isParameterDecorator) ? parameterIndex.toString() : propertyName;\n    if (isParameterDecorator === true && propertyName !== undefined) {\n        throw new Error(ERROR_MSGS.INVALID_DECORATOR_OPERATION);\n    }\n    if (Reflect.hasOwnMetadata(metadataKey, annotationTarget) !== true) {\n        paramsOrPropertiesMetadata = {};\n    }\n    else {\n        paramsOrPropertiesMetadata = Reflect.getMetadata(metadataKey, annotationTarget);\n    }\n    var paramOrPropertyMetadata = paramsOrPropertiesMetadata[key];\n    if (Array.isArray(paramOrPropertyMetadata) !== true) {\n        paramOrPropertyMetadata = [];\n    }\n    else {\n        for (var i = 0; i < paramOrPropertyMetadata.length; i++) {\n            var m = paramOrPropertyMetadata[i];\n            if (m.key === metadata.key) {\n                throw new Error(ERROR_MSGS.DUPLICATED_METADATA + \" \" + m.key);\n            }\n        }\n    }\n    paramOrPropertyMetadata.push(metadata);\n    paramsOrPropertiesMetadata[key] = paramOrPropertyMetadata;\n    Reflect.defineMetadata(metadataKey, paramsOrPropertiesMetadata, annotationTarget);\n    return annotationTarget;\n}\nfunction _decorate(decorators, target) {\n    Reflect.decorate(decorators, target);\n}\nfunction _param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); };\n}\nfunction decorate(decorator, target, parameterIndex) {\n    if (typeof parameterIndex === \"number\") {\n        _decorate([_param(parameterIndex, decorator)], target);\n    }\n    else {\n        _decorate([decorator], target);\n    }\n}\nexports.decorate = decorate;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction inject(serviceIdentifier) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.default(METADATA_KEY.INJECT_TAG, serviceIdentifier);\n        return decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n    };\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = inject;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar ERRORS_MSGS = require(\"../constants/error_msgs\");\nfunction injectable() {\n    return function (target) {\n        if (Reflect.hasOwnMetadata(METADATA_KEY.PARAM_TYPES, target) === true) {\n            throw new Error(ERRORS_MSGS.DUPLICATED_INJECTABLE_DECORATOR);\n        }\n        var types = Reflect.getMetadata(METADATA_KEY.DESIGN_PARAM_TYPES, target) || [];\n        Reflect.defineMetadata(METADATA_KEY.PARAM_TYPES, types, target);\n        return target;\n    };\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = injectable;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction multiInject(serviceIdentifier) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.default(METADATA_KEY.MULTI_INJECT_TAG, serviceIdentifier);\n        return decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n    };\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = multiInject;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction named(name) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.default(METADATA_KEY.NAMED_TAG, name);\n        if (typeof index === \"number\") {\n            return decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        }\n        else {\n            return decorator_utils_1.tagProperty(target, targetKey, metadata);\n        }\n    };\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = named;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar INJECTION = Symbol();\nfunction _proxyGetter(proto, key, resolve) {\n    function getter() {\n        if (!Reflect.hasMetadata(INJECTION, this, key)) {\n            Reflect.defineMetadata(INJECTION, resolve(), this, key);\n        }\n        return Reflect.getMetadata(INJECTION, this, key);\n    }\n    function setter(newVal) {\n        Reflect.defineMetadata(INJECTION, newVal, this, key);\n    }\n    Object.defineProperty(proto, key, {\n        configurable: true,\n        enumerable: true,\n        get: getter,\n        set: setter\n    });\n}\nfunction makePropertyInjectDecorator(kernel) {\n    return function (serviceIdentifier) {\n        return function (proto, key) {\n            var resolve = function () {\n                return kernel.get(serviceIdentifier);\n            };\n            _proxyGetter(proto, key, resolve);\n        };\n    };\n}\nexports.makePropertyInjectDecorator = makePropertyInjectDecorator;\nfunction makePropertyInjectNamedDecorator(kernel) {\n    return function (serviceIdentifier, named) {\n        return function (proto, key) {\n            var resolve = function () {\n                return kernel.getNamed(serviceIdentifier, named);\n            };\n            _proxyGetter(proto, key, resolve);\n        };\n    };\n}\nexports.makePropertyInjectNamedDecorator = makePropertyInjectNamedDecorator;\nfunction makePropertyInjectTaggedDecorator(kernel) {\n    return function (serviceIdentifier, key, value) {\n        return function (proto, propertyName) {\n            var resolve = function () {\n                return kernel.getTagged(serviceIdentifier, key, value);\n            };\n            _proxyGetter(proto, propertyName, resolve);\n        };\n    };\n}\nexports.makePropertyInjectTaggedDecorator = makePropertyInjectTaggedDecorator;\nfunction makePropertyMultiInjectDecorator(kernel) {\n    return function (serviceIdentifier) {\n        return function (proto, key) {\n            var resolve = function () {\n                return kernel.getAll(serviceIdentifier);\n            };\n            _proxyGetter(proto, key, resolve);\n        };\n    };\n}\nexports.makePropertyMultiInjectDecorator = makePropertyMultiInjectDecorator;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nfunction tagged(metadataKey, metadataValue) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.default(metadataKey, metadataValue);\n        if (typeof index === \"number\") {\n            return decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n        }\n        else {\n            return decorator_utils_1.tagProperty(target, targetKey, metadata);\n        }\n    };\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = tagged;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar metadata_1 = require(\"../planning/metadata\");\nvar decorator_utils_1 = require(\"./decorator_utils\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nfunction targetName(name) {\n    return function (target, targetKey, index) {\n        var metadata = new metadata_1.default(METADATA_KEY.NAME_TAG, name);\n        return decorator_utils_1.tagParameter(target, targetKey, index, metadata);\n    };\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = targetName;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar binding_scope_1 = require(\"./binding_scope\");\nvar binding_type_1 = require(\"./binding_type\");\nvar Binding = (function () {\n    function Binding(serviceIdentifier) {\n        this.activated = false;\n        this.serviceIdentifier = serviceIdentifier;\n        this.scope = binding_scope_1.default.Transient;\n        this.type = binding_type_1.default.Invalid;\n        this.constraint = function (request) { return true; };\n        this.implementationType = null;\n        this.cache = null;\n        this.factory = null;\n        this.provider = null;\n        this.onActivation = null;\n    }\n    return Binding;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Binding;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar BindingCount;\n(function (BindingCount) {\n    BindingCount[BindingCount[\"NoBindingsAvailable\"] = 0] = \"NoBindingsAvailable\";\n    BindingCount[BindingCount[\"OnlyOneBindingAvailable\"] = 1] = \"OnlyOneBindingAvailable\";\n    BindingCount[BindingCount[\"MultipleBindingsAvailable\"] = 2] = \"MultipleBindingsAvailable\";\n})(BindingCount || (BindingCount = {}));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BindingCount;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar BindingScope;\n(function (BindingScope) {\n    BindingScope[BindingScope[\"Transient\"] = 0] = \"Transient\";\n    BindingScope[BindingScope[\"Singleton\"] = 1] = \"Singleton\";\n})(BindingScope || (BindingScope = {}));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BindingScope;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar BindingType;\n(function (BindingType) {\n    BindingType[BindingType[\"Invalid\"] = 0] = \"Invalid\";\n    BindingType[BindingType[\"Instance\"] = 1] = \"Instance\";\n    BindingType[BindingType[\"ConstantValue\"] = 2] = \"ConstantValue\";\n    BindingType[BindingType[\"DynamicValue\"] = 3] = \"DynamicValue\";\n    BindingType[BindingType[\"Constructor\"] = 4] = \"Constructor\";\n    BindingType[BindingType[\"Factory\"] = 5] = \"Factory\";\n    BindingType[BindingType[\"Provider\"] = 6] = \"Provider\";\n})(BindingType || (BindingType = {}));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BindingType;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nexports.DUPLICATED_INJECTABLE_DECORATOR = \"Cannot apply @injectable decorator multiple times.\";\nexports.DUPLICATED_METADATA = \"Metadadata key was used more than once in a parameter:\";\nexports.NULL_ARGUMENT = \"NULL argument\";\nexports.KEY_NOT_FOUND = \"Key Not Found\";\nexports.AMBIGUOUS_MATCH = \"Ambiguous match found for serviceIdentifier:\";\nexports.CANNOT_UNBIND = \"Could not unbind serviceIdentifier:\";\nexports.NOT_REGISTERED = \"No bindings found for serviceIdentifier:\";\nexports.MISSING_INJECTABLE_ANNOTATION = \"Missing required @injectable annotation in:\";\nexports.MISSING_INJECT_ANNOTATION = \"Missing required @inject or @multiInject annotation in:\";\nexports.CIRCULAR_DEPENDENCY = \"Circular dependency found between services:\";\nexports.NOT_IMPLEMENTED = \"Sorry, this feature is not fully implemented yet.\";\nexports.INVALID_BINDING_TYPE = \"Invalid binding type:\";\nexports.MISSING_EXPLICIT_CONSTRUCTOR = \"Derived class must explicitly declare its constructor:\";\nexports.INVALID_DECORATOR_OPERATION = \"The @inject @multiInject @tagged and @named decorators \" +\n    \"must be applied to the parameters of a class constructor or a class property.\";\nexports.NO_MORE_SNAPSHOTS_AVAILABLE = \"No snapshot available to restore.\";\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nexports.NAMED_TAG = \"named\";\nexports.NAME_TAG = \"name\";\nexports.INJECT_TAG = \"inject\";\nexports.MULTI_INJECT_TAG = \"multi_inject\";\nexports.TAGGED = \"inversify:tagged\";\nexports.TAGGED_PROP = \"inversify:tagged_props\";\nexports.PARAM_TYPES = \"inversify:paramtypes\";\nexports.DESIGN_PARAM_TYPES = \"design:paramtypes\";\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar kernel_1 = require(\"./kernel/kernel\");\nexports.Kernel = kernel_1.default;\nvar injectable_1 = require(\"./annotation/injectable\");\nexports.injectable = injectable_1.default;\nvar tagged_1 = require(\"./annotation/tagged\");\nexports.tagged = tagged_1.default;\nvar named_1 = require(\"./annotation/named\");\nexports.named = named_1.default;\nvar inject_1 = require(\"./annotation/inject\");\nexports.inject = inject_1.default;\nvar property_injectors_1 = require(\"./annotation/property_injectors\");\nexports.makePropertyInjectDecorator = property_injectors_1.makePropertyInjectDecorator;\nexports.makePropertyMultiInjectDecorator = property_injectors_1.makePropertyMultiInjectDecorator;\nvar multi_inject_1 = require(\"./annotation/multi_inject\");\nexports.multiInject = multi_inject_1.default;\nvar target_name_1 = require(\"./annotation/target_name\");\nexports.targetName = target_name_1.default;\nvar decorator_utils_1 = require(\"./annotation/decorator_utils\");\nexports.decorate = decorator_utils_1.decorate;\nvar constraint_helpers_1 = require(\"./syntax/constraint_helpers\");\nexports.traverseAncerstors = constraint_helpers_1.traverseAncerstors;\nexports.taggedConstraint = constraint_helpers_1.taggedConstraint;\nexports.namedConstraint = constraint_helpers_1.namedConstraint;\nexports.typeConstraint = constraint_helpers_1.typeConstraint;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar binding_count_1 = require(\"../bindings/binding_count\");\nvar binding_1 = require(\"../bindings/binding\");\nvar lookup_1 = require(\"./lookup\");\nvar planner_1 = require(\"../planning/planner\");\nvar resolver_1 = require(\"../resolution/resolver\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar binding_to_syntax_1 = require(\"../syntax/binding_to_syntax\");\nvar metadata_1 = require(\"../planning/metadata\");\nvar target_1 = require(\"../planning/target\");\nvar request_1 = require(\"../planning/request\");\nvar kernel_snapshot_1 = require(\"./kernel_snapshot\");\nvar Kernel = (function () {\n    function Kernel() {\n        this._planner = new planner_1.default();\n        this._resolver = new resolver_1.default();\n        this._bindingDictionary = new lookup_1.default();\n        this._middleware = null;\n        this._snapshots = [];\n    }\n    Kernel.prototype.load = function () {\n        var _this = this;\n        var modules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            modules[_i - 0] = arguments[_i];\n        }\n        modules.forEach(function (module) { module(_this); });\n    };\n    Kernel.prototype.applyMiddleware = function () {\n        var middlewares = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            middlewares[_i - 0] = arguments[_i];\n        }\n        this._middleware = middlewares.reverse().reduce(function (prev, curr) {\n            return curr(prev);\n        }, this._resolver.resolve.bind(this._resolver));\n    };\n    Kernel.prototype.bind = function (serviceIdentifier) {\n        var binding = new binding_1.default(serviceIdentifier);\n        this._bindingDictionary.add(serviceIdentifier, binding);\n        return new binding_to_syntax_1.default(binding);\n    };\n    Kernel.prototype.unbind = function (serviceIdentifier) {\n        try {\n            this._bindingDictionary.remove(serviceIdentifier);\n        }\n        catch (e) {\n            throw new Error(ERROR_MSGS.CANNOT_UNBIND + \" \" + serviceIdentifier);\n        }\n    };\n    Kernel.prototype.unbindAll = function () {\n        this._bindingDictionary = new lookup_1.default();\n    };\n    Kernel.prototype.get = function (serviceIdentifier) {\n        return this._get(serviceIdentifier, null);\n    };\n    Kernel.prototype.getNamed = function (serviceIdentifier, named) {\n        return this.getTagged(serviceIdentifier, METADATA_KEY.NAMED_TAG, named);\n    };\n    Kernel.prototype.getTagged = function (serviceIdentifier, key, value) {\n        var metadata = new metadata_1.default(key, value);\n        var target = new target_1.default(null, serviceIdentifier, metadata);\n        return this._get(serviceIdentifier, target);\n    };\n    Kernel.prototype.getAll = function (serviceIdentifier) {\n        var _this = this;\n        var bindings = this._planner.getBindings(this, serviceIdentifier);\n        switch (bindings.length) {\n            case binding_count_1.default.NoBindingsAvailable:\n                throw new Error(ERROR_MSGS.NOT_REGISTERED + \" \" + serviceIdentifier);\n            case binding_count_1.default.OnlyOneBindingAvailable:\n            case binding_count_1.default.MultipleBindingsAvailable:\n            default:\n                return bindings.map(function (binding) {\n                    return _this._planAndResolve(binding, null);\n                });\n        }\n    };\n    Kernel.prototype.getServiceIdentifierAsString = function (serviceIdentifier) {\n        var type = typeof serviceIdentifier;\n        if (type === \"function\") {\n            var _serviceIdentifier = serviceIdentifier;\n            return _serviceIdentifier.name;\n        }\n        else if (type === \"symbol\") {\n            return serviceIdentifier.toString();\n        }\n        else {\n            var _serviceIdentifier = serviceIdentifier;\n            return _serviceIdentifier;\n        }\n    };\n    Kernel.prototype.snapshot = function () {\n        this._snapshots.push(kernel_snapshot_1.default.of(this._bindingDictionary.clone(), this._middleware));\n    };\n    Kernel.prototype.restore = function () {\n        if (this._snapshots.length === 0) {\n            throw new Error(ERROR_MSGS.NO_MORE_SNAPSHOTS_AVAILABLE);\n        }\n        var snapshot = this._snapshots.pop();\n        this._bindingDictionary = snapshot.bindings;\n        this._middleware = snapshot.middleware;\n    };\n    Kernel.prototype._get = function (serviceIdentifier, target) {\n        var bindings = this._planner.getBindings(this, serviceIdentifier);\n        if (target !== null) {\n            var request = new request_1.default(serviceIdentifier, this._planner.createContext(this), null, bindings, target);\n            bindings = this._planner.getActiveBindings(request, target);\n        }\n        if (bindings.length === binding_count_1.default.NoBindingsAvailable) {\n            throw new Error(ERROR_MSGS.NOT_REGISTERED + \" \" + serviceIdentifier);\n        }\n        else if (bindings.length === binding_count_1.default.OnlyOneBindingAvailable) {\n            return this._planAndResolve(bindings[0], target);\n        }\n        else {\n            throw new Error(ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifier);\n        }\n    };\n    Kernel.prototype._planAndResolve = function (binding, target) {\n        var context = this._planner.createContext(this);\n        this._planner.createPlan(context, binding, target);\n        return (this._middleware !== null) ? this._middleware(context) : this._resolver.resolve(context);\n    };\n    return Kernel;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Kernel;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar KernelSnapshot = (function () {\n    function KernelSnapshot() {\n    }\n    KernelSnapshot.of = function (bindings, middleware) {\n        var snapshot = new KernelSnapshot();\n        snapshot.bindings = bindings;\n        snapshot.middleware = middleware;\n        return snapshot;\n    };\n    return KernelSnapshot;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = KernelSnapshot;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar KeyValuePair = (function () {\n    function KeyValuePair(serviceIdentifier, value) {\n        this.serviceIdentifier = serviceIdentifier;\n        this.value = new Array();\n        this.value.push(value);\n    }\n    return KeyValuePair;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = KeyValuePair;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar key_value_pair_1 = require(\"./key_value_pair\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar Lookup = (function () {\n    function Lookup() {\n        this._dictionary = [];\n    }\n    Lookup.prototype.add = function (serviceIdentifier, value) {\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        ;\n        if (value === null || value === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        ;\n        var index = this.getIndexByKey(serviceIdentifier);\n        if (index !== -1) {\n            this._dictionary[index].value.push(value);\n        }\n        else {\n            this._dictionary.push(new key_value_pair_1.default(serviceIdentifier, value));\n        }\n    };\n    Lookup.prototype.get = function (serviceIdentifier) {\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        var index = this.getIndexByKey(serviceIdentifier);\n        if (index !== -1) {\n            return this._dictionary[index].value;\n        }\n        else {\n            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\n        }\n    };\n    Lookup.prototype.remove = function (serviceIdentifier) {\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        var index = this.getIndexByKey(serviceIdentifier);\n        if (index !== -1) {\n            this._dictionary.splice(index, 1);\n        }\n        else {\n            throw new Error(ERROR_MSGS.KEY_NOT_FOUND);\n        }\n    };\n    Lookup.prototype.hasKey = function (serviceIdentifier) {\n        if (serviceIdentifier === null || serviceIdentifier === undefined) {\n            throw new Error(ERROR_MSGS.NULL_ARGUMENT);\n        }\n        var index = this.getIndexByKey(serviceIdentifier);\n        if (index !== -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Lookup.prototype.clone = function () {\n        var l = new Lookup();\n        for (var _i = 0, _a = this._dictionary; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            for (var _b = 0, _c = entry.value; _b < _c.length; _b++) {\n                var binding = _c[_b];\n                l.add(entry.serviceIdentifier, binding);\n            }\n        }\n        return l;\n    };\n    Lookup.prototype.getIndexByKey = function (serviceIdentifier) {\n        var index = -1;\n        for (var i = 0; i < this._dictionary.length; i++) {\n            var keyValuePair = this._dictionary[i];\n            if (keyValuePair.serviceIdentifier === serviceIdentifier) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    return Lookup;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Lookup;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar Context = (function () {\n    function Context(kernel) {\n        this.kernel = kernel;\n    }\n    Context.prototype.addPlan = function (plan) {\n        this.plan = plan;\n    };\n    return Context;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Context;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar Metadata = (function () {\n    function Metadata(key, value) {\n        this.key = key;\n        this.value = value;\n    }\n    return Metadata;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Metadata;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar Plan = (function () {\n    function Plan(parentContext, rootRequest) {\n        this.parentContext = parentContext;\n        this.rootRequest = rootRequest;\n    }\n    return Plan;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Plan;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar plan_1 = require(\"./plan\");\nvar context_1 = require(\"./context\");\nvar request_1 = require(\"./request\");\nvar target_1 = require(\"./target\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar binding_type_1 = require(\"../bindings/binding_type\");\nvar Planner = (function () {\n    function Planner() {\n    }\n    Planner.prototype.createContext = function (kernel) {\n        return new context_1.default(kernel);\n    };\n    Planner.prototype.createPlan = function (context, binding, target) {\n        var _this = this;\n        var rootRequest = new request_1.default(binding.serviceIdentifier, context, null, binding, target);\n        var plan = new plan_1.default(context, rootRequest);\n        context.addPlan(plan);\n        var dependencies = this._getDependencies(binding.implementationType);\n        dependencies.forEach(function (dependency) { _this._createSubRequest(rootRequest, dependency); });\n        return plan;\n    };\n    Planner.prototype.getBindings = function (kernel, serviceIdentifier) {\n        var bindings = [];\n        var _kernel = kernel;\n        var _bindingDictionary = _kernel._bindingDictionary;\n        if (_bindingDictionary.hasKey(serviceIdentifier)) {\n            bindings = _bindingDictionary.get(serviceIdentifier);\n        }\n        return bindings;\n    };\n    Planner.prototype.getActiveBindings = function (parentRequest, target) {\n        var bindings = this.getBindings(parentRequest.parentContext.kernel, target.serviceIdentifier);\n        var activeBindings = [];\n        if (bindings.length > 1 && target.isArray() === false) {\n            activeBindings = bindings.filter(function (binding) {\n                var request = new request_1.default(binding.serviceIdentifier, parentRequest.parentContext, parentRequest, binding, target);\n                return binding.constraint(request);\n            });\n        }\n        else {\n            activeBindings = bindings;\n        }\n        return activeBindings;\n    };\n    Planner.prototype._createSubRequest = function (parentRequest, target) {\n        try {\n            var activeBindings = this.getActiveBindings(parentRequest, target);\n            if (activeBindings.length === 0) {\n                var serviceIdentifier = parentRequest.parentContext.kernel.getServiceIdentifierAsString(target.serviceIdentifier);\n                throw new Error(ERROR_MSGS.NOT_REGISTERED + \" \" + serviceIdentifier);\n            }\n            else if (activeBindings.length > 1 && target.isArray() === false) {\n                var serviceIdentifier = parentRequest.parentContext.kernel.getServiceIdentifierAsString(target.serviceIdentifier);\n                throw new Error(ERROR_MSGS.AMBIGUOUS_MATCH + \" \" + serviceIdentifier);\n            }\n            else {\n                this._createChildRequest(parentRequest, target, activeBindings);\n            }\n        }\n        catch (error) {\n            if (error instanceof RangeError) {\n                this._throwWhenCircularDependenciesFound(parentRequest.parentContext.plan.rootRequest);\n            }\n            else {\n                throw new Error(error.message);\n            }\n        }\n    };\n    Planner.prototype._createChildRequest = function (parentRequest, target, bindings) {\n        var _this = this;\n        var childRequest = parentRequest.addChildRequest(target.serviceIdentifier, bindings, target);\n        var subChildRequest = childRequest;\n        bindings.forEach(function (binding) {\n            if (target.isArray()) {\n                subChildRequest = childRequest.addChildRequest(binding.serviceIdentifier, binding, target);\n            }\n            if (binding.type === binding_type_1.default.Instance) {\n                var subDependencies = _this._getDependencies(binding.implementationType);\n                subDependencies.forEach(function (d, index) {\n                    _this._createSubRequest(subChildRequest, d);\n                });\n            }\n        });\n    };\n    Planner.prototype._throwWhenCircularDependenciesFound = function (request, previousServiceIdentifiers) {\n        var _this = this;\n        if (previousServiceIdentifiers === void 0) { previousServiceIdentifiers = []; }\n        previousServiceIdentifiers.push(request.serviceIdentifier);\n        request.childRequests.forEach(function (childRequest) {\n            var serviceIdentifier = childRequest.serviceIdentifier;\n            if (previousServiceIdentifiers.indexOf(serviceIdentifier) === -1) {\n                if (childRequest.childRequests.length > 0) {\n                    _this._throwWhenCircularDependenciesFound(childRequest, previousServiceIdentifiers);\n                }\n                else {\n                    previousServiceIdentifiers.push(serviceIdentifier);\n                }\n            }\n            else {\n                var tailServiceIdentifier = request.parentContext.kernel.getServiceIdentifierAsString(request.serviceIdentifier);\n                throw new Error(ERROR_MSGS.CIRCULAR_DEPENDENCY + \" \" + serviceIdentifier + \" and \" + tailServiceIdentifier);\n            }\n        });\n    };\n    Planner.prototype._getDependencies = function (func) {\n        if (func === null) {\n            return [];\n        }\n        var constructorName = func.name;\n        var targetsTypes = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, func);\n        if (targetsTypes === undefined) {\n            var msg = ERROR_MSGS.MISSING_INJECTABLE_ANNOTATION + \" \" + constructorName + \".\";\n            throw new Error(msg);\n        }\n        var targetsMetadata = Reflect.getMetadata(METADATA_KEY.TAGGED, func) || [];\n        var targets = [];\n        var _loop_1 = function(i) {\n            var targetType = targetsTypes[i];\n            var targetMetadata = targetsMetadata[i.toString()] || [];\n            var targetMetadataMap = {};\n            targetMetadata.forEach(function (m) {\n                targetMetadataMap[m.key.toString()] = m.value;\n            });\n            var inject = targetMetadataMap[METADATA_KEY.INJECT_TAG];\n            var multiInject = targetMetadataMap[METADATA_KEY.MULTI_INJECT_TAG];\n            var targetName = targetMetadataMap[METADATA_KEY.NAME_TAG];\n            targetType = (inject || multiInject) ? (inject || multiInject) : targetType;\n            if (targetType === Object || targetType === Function || targetType === undefined) {\n                var msg = ERROR_MSGS.MISSING_INJECT_ANNOTATION + \" argument \" + i + \" in class \" + constructorName + \".\";\n                throw new Error(msg);\n            }\n            var target = new target_1.default(targetName, targetType);\n            target.metadata = targetMetadata;\n            targets.push(target);\n        };\n        for (var i = 0; i < func.length; i++) {\n            _loop_1(i);\n        }\n        if (targets.length === 0 && this._baseClassHasDepencencies(func)) {\n            throw new Error(ERROR_MSGS.MISSING_EXPLICIT_CONSTRUCTOR + \" \" + constructorName + \".\");\n        }\n        return targets;\n    };\n    Planner.prototype._baseClassHasDepencencies = function (func) {\n        var baseConstructor = Object.getPrototypeOf(func.prototype).constructor;\n        if (baseConstructor !== Object) {\n            var targetsTypes = Reflect.getMetadata(METADATA_KEY.PARAM_TYPES, baseConstructor);\n            if (baseConstructor.length > 0 && targetsTypes) {\n                return true;\n            }\n            else {\n                return this._baseClassHasDepencencies(baseConstructor);\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    return Planner;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Planner;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar QueryableString = (function () {\n    function QueryableString(str) {\n        this.str = str;\n    }\n    QueryableString.prototype.startsWith = function (searchString) {\n        return this.str.indexOf(searchString) === 0;\n    };\n    QueryableString.prototype.endsWith = function (searchString) {\n        var reverseString = \"\";\n        var reverseSearchString = searchString.split(\"\").reverse().join(\"\");\n        reverseString = this.str.split(\"\").reverse().join(\"\");\n        return this.startsWith.call({ str: reverseString }, reverseSearchString);\n    };\n    QueryableString.prototype.contains = function (searchString) {\n        return (this.str.indexOf(searchString) !== -1);\n    };\n    QueryableString.prototype.equals = function (compareString) {\n        return this.str === compareString;\n    };\n    QueryableString.prototype.value = function () {\n        return this.str;\n    };\n    return QueryableString;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = QueryableString;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar Request = (function () {\n    function Request(serviceIdentifier, parentContext, parentRequest, bindings, target) {\n        if (target === void 0) { target = null; }\n        this.serviceIdentifier = serviceIdentifier;\n        this.parentContext = parentContext;\n        this.parentRequest = parentRequest;\n        this.target = target;\n        this.childRequests = [];\n        this.bindings = (Array.isArray(bindings) ? bindings : ((bindings) ? [bindings] : []));\n    }\n    Request.prototype.addChildRequest = function (serviceIdentifier, bindings, target) {\n        var child = new Request(serviceIdentifier, this.parentContext, this, bindings, target);\n        this.childRequests.push(child);\n        return child;\n    };\n    return Request;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Request;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar metadata_1 = require(\"../planning/metadata\");\nvar queryable_string_1 = require(\"./queryable_string\");\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar Target = (function () {\n    function Target(name, serviceIdentifier, namedOrTagged) {\n        this.serviceIdentifier = serviceIdentifier;\n        this.name = new queryable_string_1.default(name || \"\");\n        this.metadata = new Array();\n        var metadataItem = null;\n        if (typeof namedOrTagged === \"string\") {\n            metadataItem = new metadata_1.default(METADATA_KEY.NAMED_TAG, namedOrTagged);\n        }\n        else if (namedOrTagged instanceof metadata_1.default) {\n            metadataItem = namedOrTagged;\n        }\n        if (metadataItem !== null) {\n            this.metadata.push(metadataItem);\n        }\n    }\n    Target.prototype.hasTag = function (key) {\n        for (var i = 0; i < this.metadata.length; i++) {\n            var m = this.metadata[i];\n            if (m.key === key) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Target.prototype.isArray = function () {\n        return this.hasTag(METADATA_KEY.MULTI_INJECT_TAG);\n    };\n    Target.prototype.matchesArray = function (name) {\n        return this.matchesTag(METADATA_KEY.MULTI_INJECT_TAG)(name);\n    };\n    Target.prototype.isNamed = function () {\n        return this.hasTag(METADATA_KEY.NAMED_TAG);\n    };\n    Target.prototype.isTagged = function () {\n        if (this.metadata.length > 1) {\n            return true;\n        }\n        else if (this.metadata.length === 1) {\n            return !this.hasTag(METADATA_KEY.NAMED_TAG);\n        }\n        else {\n            return false;\n        }\n    };\n    Target.prototype.matchesNamedTag = function (name) {\n        return this.matchesTag(METADATA_KEY.NAMED_TAG)(name);\n    };\n    Target.prototype.matchesTag = function (key) {\n        var _this = this;\n        return function (value) {\n            for (var i = 0; i < _this.metadata.length; i++) {\n                var m = _this.metadata[i];\n                if (m.key === key && m.value === value) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    };\n    return Target;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Target;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar binding_scope_1 = require(\"../bindings/binding_scope\");\nvar binding_type_1 = require(\"../bindings/binding_type\");\nvar ERROR_MSGS = require(\"../constants/error_msgs\");\nvar Resolver = (function () {\n    function Resolver() {\n    }\n    Resolver.prototype.resolve = function (context) {\n        var rootRequest = context.plan.rootRequest;\n        return this._resolve(rootRequest);\n    };\n    Resolver.prototype._resolve = function (request) {\n        var _this = this;\n        var bindings = request.bindings;\n        var childRequests = request.childRequests;\n        if (request.target && request.target.isArray() &&\n            (!request.parentRequest.target || !request.parentRequest.target.matchesArray(request.target.serviceIdentifier))) {\n            return childRequests.map(function (childRequest) { return _this._resolve(childRequest); });\n        }\n        else {\n            var result = null;\n            var binding = bindings[0];\n            var isSingleton = binding.scope === binding_scope_1.default.Singleton;\n            if (isSingleton && binding.activated === true) {\n                return binding.cache;\n            }\n            switch (binding.type) {\n                case binding_type_1.default.ConstantValue:\n                    result = binding.cache;\n                    break;\n                case binding_type_1.default.DynamicValue:\n                    result = binding.dynamicValue();\n                    break;\n                case binding_type_1.default.Constructor:\n                    result = binding.implementationType;\n                    break;\n                case binding_type_1.default.Factory:\n                    result = binding.factory(request.parentContext);\n                    break;\n                case binding_type_1.default.Provider:\n                    result = binding.provider(request.parentContext);\n                    break;\n                case binding_type_1.default.Instance:\n                    var constr = binding.implementationType;\n                    if (childRequests.length > 0) {\n                        var injections = childRequests.map(function (childRequest) {\n                            return _this._resolve(childRequest);\n                        });\n                        result = this._createInstance(constr, injections);\n                    }\n                    else {\n                        result = new constr();\n                    }\n                    break;\n                case binding_type_1.default.Invalid:\n                default:\n                    var serviceIdentifier = request.parentContext.kernel.getServiceIdentifierAsString(request.serviceIdentifier);\n                    throw new Error(ERROR_MSGS.INVALID_BINDING_TYPE + \" \" + serviceIdentifier);\n            }\n            if (typeof binding.onActivation === \"function\") {\n                result = binding.onActivation(request.parentContext, result);\n            }\n            if (isSingleton) {\n                binding.cache = result;\n                binding.activated = true;\n            }\n            return result;\n        }\n    };\n    Resolver.prototype._createInstance = function (Func, injections) {\n        return new (Func.bind.apply(Func, [void 0].concat(injections)))();\n    };\n    return Resolver;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Resolver;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar binding_scope_1 = require(\"../bindings/binding_scope\");\nvar binding_when_on_syntax_1 = require(\"./binding_when_on_syntax\");\nvar BindingInSyntax = (function () {\n    function BindingInSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingInSyntax.prototype.inSingletonScope = function () {\n        this._binding.scope = binding_scope_1.default.Singleton;\n        return new binding_when_on_syntax_1.default(this._binding);\n    };\n    return BindingInSyntax;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BindingInSyntax;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar binding_in_syntax_1 = require(\"./binding_in_syntax\");\nvar binding_when_syntax_1 = require(\"./binding_when_syntax\");\nvar binding_on_syntax_1 = require(\"./binding_on_syntax\");\nvar BindingInWhenOnSyntax = (function () {\n    function BindingInWhenOnSyntax(binding) {\n        this._binding = binding;\n        this._bindingWhenSyntax = new binding_when_syntax_1.default(this._binding);\n        this._bindingOnSyntax = new binding_on_syntax_1.default(this._binding);\n        this._bindingInSyntax = new binding_in_syntax_1.default(binding);\n    }\n    BindingInWhenOnSyntax.prototype.inSingletonScope = function () {\n        return this._bindingInSyntax.inSingletonScope();\n    };\n    BindingInWhenOnSyntax.prototype.when = function (constraint) {\n        return this._bindingWhenSyntax.when(constraint);\n    };\n    BindingInWhenOnSyntax.prototype.whenTargetNamed = function (name) {\n        return this._bindingWhenSyntax.whenTargetNamed(name);\n    };\n    BindingInWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenTargetTagged(tag, value);\n    };\n    BindingInWhenOnSyntax.prototype.whenInjectedInto = function (parent) {\n        return this._bindingWhenSyntax.whenInjectedInto(parent);\n    };\n    BindingInWhenOnSyntax.prototype.whenParentNamed = function (name) {\n        return this._bindingWhenSyntax.whenParentNamed(name);\n    };\n    BindingInWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenParentTagged(tag, value);\n    };\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);\n    };\n    BindingInWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);\n    };\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {\n        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);\n    };\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);\n    };\n    BindingInWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {\n        return this._bindingWhenSyntax.whenNoAncestorNamed(name);\n    };\n    BindingInWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);\n    };\n    BindingInWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);\n    };\n    BindingInWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);\n    };\n    BindingInWhenOnSyntax.prototype.onActivation = function (handler) {\n        return this._bindingOnSyntax.onActivation(handler);\n    };\n    return BindingInWhenOnSyntax;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BindingInWhenOnSyntax;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar binding_when_syntax_1 = require(\"./binding_when_syntax\");\nvar BindingOnSyntax = (function () {\n    function BindingOnSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingOnSyntax.prototype.onActivation = function (handler) {\n        this._binding.onActivation = handler;\n        return new binding_when_syntax_1.default(this._binding);\n    };\n    return BindingOnSyntax;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BindingOnSyntax;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar binding_in_when_on_syntax_1 = require(\"./binding_in_when_on_syntax\");\nvar binding_when_on_syntax_1 = require(\"./binding_when_on_syntax\");\nvar binding_type_1 = require(\"../bindings/binding_type\");\nvar BindingToSyntax = (function () {\n    function BindingToSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingToSyntax.prototype.to = function (constructor) {\n        this._binding.type = binding_type_1.default.Instance;\n        this._binding.implementationType = constructor;\n        return new binding_in_when_on_syntax_1.default(this._binding);\n    };\n    BindingToSyntax.prototype.toConstantValue = function (value) {\n        this._binding.type = binding_type_1.default.ConstantValue;\n        this._binding.cache = value;\n        this._binding.dynamicValue = null;\n        this._binding.implementationType = null;\n        return new binding_when_on_syntax_1.default(this._binding);\n    };\n    BindingToSyntax.prototype.toDynamicValue = function (func) {\n        this._binding.type = binding_type_1.default.DynamicValue;\n        this._binding.cache = null;\n        this._binding.dynamicValue = func;\n        this._binding.implementationType = null;\n        return new binding_when_on_syntax_1.default(this._binding);\n    };\n    BindingToSyntax.prototype.toConstructor = function (constructor) {\n        this._binding.type = binding_type_1.default.Constructor;\n        this._binding.implementationType = constructor;\n        return new binding_when_on_syntax_1.default(this._binding);\n    };\n    BindingToSyntax.prototype.toFactory = function (factory) {\n        this._binding.type = binding_type_1.default.Factory;\n        this._binding.factory = factory;\n        return new binding_when_on_syntax_1.default(this._binding);\n    };\n    BindingToSyntax.prototype.toAutoFactory = function (serviceIdentifier) {\n        this._binding.type = binding_type_1.default.Factory;\n        this._binding.factory = function (context) {\n            return function () {\n                return context.kernel.get(serviceIdentifier);\n            };\n        };\n        return new binding_when_on_syntax_1.default(this._binding);\n    };\n    BindingToSyntax.prototype.toProvider = function (provider) {\n        this._binding.type = binding_type_1.default.Provider;\n        this._binding.provider = provider;\n        return new binding_when_on_syntax_1.default(this._binding);\n    };\n    return BindingToSyntax;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BindingToSyntax;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar binding_when_syntax_1 = require(\"./binding_when_syntax\");\nvar binding_on_syntax_1 = require(\"./binding_on_syntax\");\nvar BindingWhenOnSyntax = (function () {\n    function BindingWhenOnSyntax(binding) {\n        this._binding = binding;\n        this._bindingWhenSyntax = new binding_when_syntax_1.default(this._binding);\n        this._bindingOnSyntax = new binding_on_syntax_1.default(this._binding);\n    }\n    BindingWhenOnSyntax.prototype.when = function (constraint) {\n        return this._bindingWhenSyntax.when(constraint);\n    };\n    BindingWhenOnSyntax.prototype.whenTargetNamed = function (name) {\n        return this._bindingWhenSyntax.whenTargetNamed(name);\n    };\n    BindingWhenOnSyntax.prototype.whenTargetTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenTargetTagged(tag, value);\n    };\n    BindingWhenOnSyntax.prototype.whenInjectedInto = function (parent) {\n        return this._bindingWhenSyntax.whenInjectedInto(parent);\n    };\n    BindingWhenOnSyntax.prototype.whenParentNamed = function (name) {\n        return this._bindingWhenSyntax.whenParentNamed(name);\n    };\n    BindingWhenOnSyntax.prototype.whenParentTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenParentTagged(tag, value);\n    };\n    BindingWhenOnSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n        return this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);\n    };\n    BindingWhenOnSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n        return this._bindingWhenSyntax.whenNoAncestorIs(ancestor);\n    };\n    BindingWhenOnSyntax.prototype.whenAnyAncestorNamed = function (name) {\n        return this._bindingWhenSyntax.whenAnyAncestorNamed(name);\n    };\n    BindingWhenOnSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);\n    };\n    BindingWhenOnSyntax.prototype.whenNoAncestorNamed = function (name) {\n        return this._bindingWhenSyntax.whenNoAncestorNamed(name);\n    };\n    BindingWhenOnSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n        return this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);\n    };\n    BindingWhenOnSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n        return this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);\n    };\n    BindingWhenOnSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n        return this._bindingWhenSyntax.whenNoAncestorMatches(constraint);\n    };\n    BindingWhenOnSyntax.prototype.onActivation = function (handler) {\n        return this._bindingOnSyntax.onActivation(handler);\n    };\n    return BindingWhenOnSyntax;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BindingWhenOnSyntax;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar binding_on_syntax_1 = require(\"./binding_on_syntax\");\nvar constraint_helpers_1 = require(\"./constraint_helpers\");\nvar BindingWhenSyntax = (function () {\n    function BindingWhenSyntax(binding) {\n        this._binding = binding;\n    }\n    BindingWhenSyntax.prototype.when = function (constraint) {\n        this._binding.constraint = constraint;\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetNamed = function (name) {\n        this._binding.constraint = constraint_helpers_1.namedConstraint(name);\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenTargetTagged = function (tag, value) {\n        this._binding.constraint = constraint_helpers_1.taggedConstraint(tag)(value);\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenInjectedInto = function (parent) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.typeConstraint(parent)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenParentNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.namedConstraint(name)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenParentTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.taggedConstraint(tag)(value)(request.parentRequest);\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorIs = function (ancestor) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorIs = function (ancestor) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.typeConstraint(ancestor));\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorNamed = function (name) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.namedConstraint(name));\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorTagged = function (tag, value) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint_helpers_1.taggedConstraint(tag)(value));\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenAnyAncestorMatches = function (constraint) {\n        this._binding.constraint = function (request) {\n            return constraint_helpers_1.traverseAncerstors(request, constraint);\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    BindingWhenSyntax.prototype.whenNoAncestorMatches = function (constraint) {\n        this._binding.constraint = function (request) {\n            return !constraint_helpers_1.traverseAncerstors(request, constraint);\n        };\n        return new binding_on_syntax_1.default(this._binding);\n    };\n    return BindingWhenSyntax;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = BindingWhenSyntax;\n","/**\n * inversify v.2.0.0-beta.4 - A lightweight IoC container written in TypeScript.\n * Copyright (c) 2015 Remo H. Jansen\n * MIT inversify.io/LICENSE\n * http://inversify.io\n */\n\"use strict\";\nvar METADATA_KEY = require(\"../constants/metadata_keys\");\nvar traverseAncerstors = function (request, constraint) {\n    var parent = request.parentRequest;\n    if (parent !== null) {\n        return constraint(parent) ? true : traverseAncerstors(parent, constraint);\n    }\n    else {\n        return false;\n    }\n};\nexports.traverseAncerstors = traverseAncerstors;\nvar taggedConstraint = function (key) { return function (value) { return function (request) {\n    return request.target.matchesTag(key)(value);\n}; }; };\nexports.taggedConstraint = taggedConstraint;\nvar namedConstraint = taggedConstraint(METADATA_KEY.NAMED_TAG);\nexports.namedConstraint = namedConstraint;\nvar typeConstraint = function (type) { return function (request) {\n    var binding = request.bindings[0];\n    if (typeof type === \"string\") {\n        var serviceIdentifier = binding.serviceIdentifier;\n        return serviceIdentifier === type;\n    }\n    else {\n        var constructor = request.bindings[0].implementationType;\n        return type === constructor;\n    }\n}; };\nexports.typeConstraint = typeConstraint;\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\n\nimport ProvideInWhenOnSyntax from \"../syntax/provide_in_when_on_syntax\";\nimport ProvideWhenSyntax from \"../syntax/provide_when_syntax\";\nimport ProvideOnSyntax from \"../syntax/provide_on_syntax\";\nimport ProvideInSyntax from \"../syntax/provide_in_syntax\";\nimport ProvideDoneSyntax from \"../syntax/provide_done_syntax\";\n\nfunction fluentProvide(kernel: inversify.IKernel) {\n\n  // function is named for testing\n  return function _fluentProvide(serviceIdentifier: (string|Symbol|inversify.INewable<any>)) {\n\n    let bindingWhenOnSyntax = kernel.bind<any>(serviceIdentifier).to(null);\n    let binding = (<any>bindingWhenOnSyntax)._binding;\n    let provideDoneSyntax = new ProvideDoneSyntax(binding);\n\n    let provideInWhenOnSyntax = new ProvideInWhenOnSyntax<any>(\n      new ProvideInSyntax<any>(bindingWhenOnSyntax, provideDoneSyntax),\n      new ProvideWhenSyntax<any>(bindingWhenOnSyntax, provideDoneSyntax),\n      new ProvideOnSyntax<any>(bindingWhenOnSyntax, provideDoneSyntax)\n    );\n\n    return provideInWhenOnSyntax;\n\n  };\n}\n\nexport default fluentProvide;\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\r\n\r\nimport { decorate, injectable } from \"inversify\";\r\n\r\nfunction provide(kernel: inversify.IKernel) {\r\n\r\n  // function is named for testing\r\n  return function _provide(serviceIdentifier: (string|Symbol|inversify.INewable<any>)) {\r\n    let bindingWhenOnSyntax = kernel.bind<any>(serviceIdentifier).to(null);\r\n    return function (target: any) {\r\n      decorate(injectable(), target);\r\n      let binding: inversify.IBinding<any> = (<any>bindingWhenOnSyntax)._binding;\r\n      binding.implementationType = target;\r\n      return target;\r\n    };\r\n  };\r\n}\r\n\r\nexport default provide;\r\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\n\nimport fluentProvide from \"../decorator/fluent_provide\";\n\nfunction makeFluentProvideDecorator(kernel: inversify.IKernel) {\n    return fluentProvide(kernel);\n}\n\nexport default makeFluentProvideDecorator;\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\r\n\r\nimport provide from \"../decorator/provide\";\r\n\r\nfunction makeProvideDecorator(kernel: inversify.IKernel) {\r\n    return provide(kernel);\r\n}\r\n\r\nexport default makeProvideDecorator;\r\n","///<reference path=\"./interfaces/interfaces.d.ts\" />\r\n\r\nimport makeProvideDecorator from \"./factory/provide_decorator_factory\";\r\nimport makeFluentProvideDecorator from \"./factory/fluent_provide_decorator_factory\";\r\nimport autoProvide from \"./utils/auto_wire\";\r\n\r\nexport { makeProvideDecorator };\r\nexport { makeFluentProvideDecorator };\r\nexport { autoProvide };\r\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\n\nimport { decorate, injectable } from \"inversify\";\n\nclass ProvideDoneSyntax<T> implements IProvideDoneSyntax<T> {\n\n    private _binding: inversify.IBinding<T>;\n\n    public constructor(binding: inversify.IBinding<T>) {\n        this._binding = binding;\n    }\n\n    public done() {\n        return (target: any) => {\n            decorate(injectable(), target);\n            this._binding.implementationType = target;\n            return target;\n        };\n    }\n\n}\n\nexport default ProvideDoneSyntax;\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\r\n\r\nimport ProvideWhenOnSyntax from \"./provide_when_on_syntax\";\r\nimport ProvideWhenSyntax from \"./provide_when_syntax\";\r\nimport ProvideOnSyntax from \"./provide_on_syntax\";\r\nimport ProvideDoneSyntax from \"./provide_done_syntax\";\r\n\r\nclass ProvideInSyntax<T> implements IProvideInSyntax<T> {\r\n\r\n    private _bindingInSyntax: inversify.IBindingInSyntax<T>;\r\n    private _provideDoneSyntax: IProvideDoneSyntax<T>;\r\n\r\n    public constructor(\r\n        bindingInSyntax: inversify.IBindingInSyntax<T>,\r\n        provideDoneSyntax: IProvideDoneSyntax<T>\r\n    ) {\r\n        this._bindingInSyntax = bindingInSyntax;\r\n        this._provideDoneSyntax = provideDoneSyntax;\r\n    }\r\n\r\n    public inSingletonScope(): IProvideWhenOnSyntax<T> {\r\n        let bindingWhenOnSyntax = this._bindingInSyntax.inSingletonScope();\r\n        let provideWhenSyntax = new ProvideWhenSyntax<T>(bindingWhenOnSyntax, this._provideDoneSyntax);\r\n        let provideOnSyntax = new ProvideOnSyntax<T>(bindingWhenOnSyntax, this._provideDoneSyntax);\r\n        return new ProvideWhenOnSyntax(provideWhenSyntax, provideOnSyntax);\r\n    }\r\n\r\n    public done() {\r\n        let binding: inversify.IBinding<T> = (<any>this._bindingInSyntax)._binding;\r\n        let provideDoneSyntax = new ProvideDoneSyntax<T>(binding);\r\n        return provideDoneSyntax.done();\r\n    }\r\n\r\n}\r\n\r\nexport default ProvideInSyntax;\r\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\r\n\r\nclass ProvideInWhenOnSyntax<T> implements IProvideInWhenOnSyntax<T>  {\r\n\r\n    private _provideInSyntax: IProvideInSyntax<T>;\r\n    private _provideWhenSyntax: IProvideWhenSyntax<T>;\r\n    private _provideOnSyntax: IProvideOnSyntax<T>;\r\n\r\n    public constructor(\r\n        provideInSyntax: IProvideInSyntax<T>,\r\n        provideWhenSyntax: IProvideWhenSyntax<T>,\r\n        provideOnSyntax: IProvideOnSyntax<T>\r\n    ) {\r\n        this._provideInSyntax = provideInSyntax;\r\n        this._provideWhenSyntax = provideWhenSyntax;\r\n        this._provideOnSyntax = provideOnSyntax;\r\n    }\r\n\r\n    public when(constraint: (request: inversify.IRequest) => boolean): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.when(constraint);\r\n    }\r\n\r\n    public whenTargetNamed(name: string): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenTargetNamed(name);\r\n    }\r\n\r\n    public whenTargetTagged(tag: string, value: any): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenTargetTagged(tag, value);\r\n    }\r\n\r\n    public whenInjectedInto(parent: (Function|string)): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenInjectedInto(parent);\r\n    }\r\n\r\n    public whenParentNamed(name: string): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenParentNamed(name);\r\n    }\r\n\r\n    public whenParentTagged(tag: string, value: any): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenParentTagged(tag, value);\r\n    }\r\n\r\n    public whenAnyAncestorIs(ancestor: (Function|string)): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenAnyAncestorIs(ancestor);\r\n    }\r\n\r\n    public whenNoAncestorIs(ancestor: (Function|string)): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenNoAncestorIs(ancestor);\r\n    }\r\n\r\n    public whenAnyAncestorNamed(name: string): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenAnyAncestorNamed(name);\r\n    }\r\n\r\n    public whenAnyAncestorTagged(tag: string, value: any): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenAnyAncestorTagged(tag, value);\r\n    }\r\n\r\n    public whenNoAncestorNamed(name: string): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenNoAncestorNamed(name);\r\n    }\r\n\r\n    public whenNoAncestorTagged(tag: string, value: any): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenNoAncestorTagged(tag, value);\r\n    }\r\n\r\n    public whenAnyAncestorMatches(constraint: (request: inversify.IRequest) => boolean): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenAnyAncestorMatches(constraint);\r\n    }\r\n\r\n    public whenNoAncestorMatches(constraint: (request: inversify.IRequest) => boolean): IProvideOnSyntax<T> {\r\n        return this._provideWhenSyntax.whenNoAncestorMatches(constraint);\r\n    }\r\n\r\n    public onActivation(fn: (context: inversify.IContext, injectable: T) => T): IProvideWhenSyntax<T> {\r\n        return this._provideOnSyntax.onActivation(fn);\r\n    }\r\n\r\n    public inSingletonScope(): IProvideWhenOnSyntax<T> {\r\n        return this._provideInSyntax.inSingletonScope();\r\n    }\r\n\r\n    public done() {\r\n        return this._provideInSyntax.done();\r\n    }\r\n\r\n}\r\n\r\nexport default ProvideInWhenOnSyntax;\r\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\r\n\r\nimport ProvideWhenSyntax from \"./provide_when_syntax\";\r\n\r\nclass ProvideOnSyntax<T> implements IProvideOnSyntax<T> {\r\n\r\n    private _bindingOnSyntax: inversify.IBindingOnSyntax<T>;\r\n    private _provideDoneSyntax: IProvideDoneSyntax<T>;\r\n\r\n    public constructor(\r\n        bindingOnSyntax: inversify.IBindingOnSyntax<T>,\r\n        provideDoneSyntax: IProvideDoneSyntax<T>\r\n    ) {\r\n        this._bindingOnSyntax = bindingOnSyntax;\r\n        this._provideDoneSyntax = provideDoneSyntax;\r\n    }\r\n\r\n    public onActivation(fn: (context: inversify.IContext, injectable: T) => T): IProvideWhenSyntax<T> {\r\n        let bindingWhenSyntax = this._bindingOnSyntax.onActivation(fn);\r\n        return new ProvideWhenSyntax(bindingWhenSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public done() {\r\n        return this._provideDoneSyntax.done();\r\n    }\r\n\r\n}\r\n\r\nexport default ProvideOnSyntax;\r\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\n\nclass ProvideWhenOnSyntax<T> implements IProvideWhenOnSyntax<T>  {\n\n    private _provideWhenSyntax: IProvideWhenSyntax<T>;\n    private _provideOnSyntax: IProvideOnSyntax<T>;\n\n    public constructor(\n        provideWhenSyntax: IProvideWhenSyntax<T>,\n        provideOnSyntax: IProvideOnSyntax<T>\n    ) {\n        this._provideWhenSyntax = provideWhenSyntax;\n        this._provideOnSyntax = provideOnSyntax;\n    }\n\n    public when(constraint: (request: inversify.IRequest) => boolean): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.when(constraint);\n    }\n\n    public whenTargetNamed(name: string): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenTargetNamed(name);\n    }\n\n    public whenTargetTagged(tag: string, value: any): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenTargetTagged(tag, value);\n    }\n\n    public whenInjectedInto(parent: (Function|string)): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenInjectedInto(parent);\n    }\n\n    public whenParentNamed(name: string): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenParentNamed(name);\n    }\n\n    public whenParentTagged(tag: string, value: any): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenParentTagged(tag, value);\n    }\n\n    public whenAnyAncestorIs(ancestor: (Function|string)): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenAnyAncestorIs(ancestor);\n    }\n\n    public whenNoAncestorIs(ancestor: (Function|string)): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenNoAncestorIs(ancestor);\n    }\n\n    public whenAnyAncestorNamed(name: string): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenAnyAncestorNamed(name);\n    }\n\n    public whenAnyAncestorTagged(tag: string, value: any): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenAnyAncestorTagged(tag, value);\n    }\n\n    public whenNoAncestorNamed(name: string): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenNoAncestorNamed(name);\n    }\n\n    public whenNoAncestorTagged(tag: string, value: any): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenNoAncestorTagged(tag, value);\n    }\n\n    public whenAnyAncestorMatches(constraint: (request: inversify.IRequest) => boolean): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenAnyAncestorMatches(constraint);\n    }\n\n    public whenNoAncestorMatches(constraint: (request: inversify.IRequest) => boolean): IProvideOnSyntax<T> {\n        return this._provideWhenSyntax.whenNoAncestorMatches(constraint);\n    }\n\n    public onActivation(fn: (context: inversify.IContext, injectable: T) => T): IProvideWhenSyntax<T> {\n        return this._provideOnSyntax.onActivation(fn);\n    }\n\n    public done() {\n        return this._provideWhenSyntax.done();\n    }\n\n}\n\nexport default ProvideWhenOnSyntax;\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\r\n\r\nimport ProvideOnSyntax from \"./provide_on_syntax\";\r\n\r\nclass ProvideWhenSyntax<T> implements IProvideWhenSyntax<T> {\r\n\r\n    private _bindingWhenSyntax: inversify.IBindingWhenSyntax<T>;\r\n    private _provideDoneSyntax: IProvideDoneSyntax<T>;\r\n\r\n    public constructor(\r\n        bindingWhenSyntax: inversify.IBindingWhenSyntax<T>,\r\n        provideDoneSyntax: IProvideDoneSyntax<T>\r\n    ) {\r\n        this._bindingWhenSyntax = bindingWhenSyntax;\r\n        this._provideDoneSyntax = provideDoneSyntax;\r\n    }\r\n\r\n    public when(constraint: (request: inversify.IRequest) => boolean): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.when(constraint);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenTargetNamed(name: string): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenTargetNamed(name);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenTargetTagged(tag: string, value: any): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenTargetTagged(tag, value);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenInjectedInto(parent: (Function|string)): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenInjectedInto(parent);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenParentNamed(name: string): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenParentNamed(name);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenParentTagged(tag: string, value: any): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenParentTagged(tag, value);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenAnyAncestorIs(ancestor: (Function|string)): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenAnyAncestorIs(ancestor);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenNoAncestorIs(ancestor: (Function|string)): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenNoAncestorIs(ancestor);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenAnyAncestorNamed(name: string): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenAnyAncestorNamed(name);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenAnyAncestorTagged(tag: string, value: any): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenAnyAncestorTagged(tag, value);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenNoAncestorNamed(name: string): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenNoAncestorNamed(name);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenNoAncestorTagged(tag: string, value: any): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenNoAncestorTagged(tag, value);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenAnyAncestorMatches(constraint: (request: inversify.IRequest) => boolean): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenAnyAncestorMatches(constraint);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public whenNoAncestorMatches(constraint: (request: inversify.IRequest) => boolean): IProvideOnSyntax<T> {\r\n        let bindingOnSyntax = this._bindingWhenSyntax.whenNoAncestorMatches(constraint);\r\n        return new ProvideOnSyntax<T>(bindingOnSyntax, this._provideDoneSyntax);\r\n    }\r\n\r\n    public done() {\r\n        return this._provideDoneSyntax.done();\r\n    }\r\n\r\n}\r\n\r\nexport default ProvideWhenSyntax;\r\n","/// <reference path=\"../interfaces/interfaces.d.ts\" />\r\n\r\nimport { decorate } from \"inversify\";\r\nimport makeProvideDecorator from \"../factory/provide_decorator_factory\";\r\n\r\nfunction autoProvide(kernel: inversify.IKernel, ...modules: any[]) {\r\n\r\n    let provide = makeProvideDecorator(kernel);\r\n\r\n    modules.forEach((module) => {\r\n      Object.keys(module).forEach((key) => {\r\n        let entity = module[key];\r\n        let decorator = provide(entity);\r\n        decorate(decorator, entity);\r\n      });\r\n    });\r\n\r\n}\r\n\r\nexport default autoProvide;\r\n"],"sourceRoot":"/source/"}