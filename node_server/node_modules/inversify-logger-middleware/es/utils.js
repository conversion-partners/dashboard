/**
 * inversify-logger-middleware v.1.0.0-beta.3 - A basic logger middleware for InversifyJS
 * Copyright (c) 2015 Remo H. Jansen <remo.jansen@wolksoftware.com> (http://www.remojansen.com)
 * MIT inversify.io/LICENSE
 * https://github.com/inversify/inversify-logger-middleware#readme
 */
import { tree, indentation } from "./constants";
import * as chalk from "chalk";
var yellow = chalk.yellow;
function getIndentationForDepth(depth) {
    var indentationForDepth = indentation;
    for (var i = depth; i--; i >= 0) {
        indentationForDepth = "" + indentationForDepth + indentation;
    }
    return indentationForDepth;
}
function getTime() {
    if (typeof window !== "undefined") {
        return window.performance.now();
    }
    else if (typeof process !== "undefined") {
        var nanoseconds = process.hrtime()[1];
        var milliseconds = nanoseconds / 1000000;
        return milliseconds;
    }
    else {
        return new Date().getTime();
    }
}
function getTimeDiference(start, end) {
    var diff = end - start;
    var formatted = diff.toFixed(2);
    return formatted;
}
function makePropertyLogger(indentationForDepth) {
    return function (log, tabCount, key, value) {
        var line = "" + log + indentationForDepth;
        for (var i = tabCount; i > 0; i--) {
            line = "" + line + indentation;
        }
        line = "" + line + tree.item + " " + key;
        if (value !== undefined) {
            line = line + " : " + yellow(value.toString());
        }
        return line + "\n";
    };
}
export { getIndentationForDepth, getTime, getTimeDiference, makePropertyLogger };
