{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/ansi-regex/index.js","node_modules/ansi-styles/index.js","node_modules/chalk/index.js","node_modules/escape-string-regexp/index.js","node_modules/has-ansi/index.js","node_modules/process/browser.js","node_modules/strip-ansi/index.js","node_modules/supports-color/index.js","src/binding_logger.ts","src/constants.ts","src/default_renderer.ts","src/default_settings.ts","src/index.ts","src/request_logger.ts","src/target_logger.ts","src/utils.ts"],"names":[],"mappings":";;;;;;AAAA;ACAA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n","'use strict';\n\nfunction assembleStyles () {\n\tvar styles = {\n\t\tmodifiers: {\n\t\t\treset: [0, 0],\n\t\t\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolors: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39]\n\t\t},\n\t\tbgColors: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49]\n\t\t}\n\t};\n\n\t// fix humans\n\tstyles.colors.grey = styles.colors.gray;\n\n\tObject.keys(styles).forEach(function (groupName) {\n\t\tvar group = styles[groupName];\n\n\t\tObject.keys(group).forEach(function (styleName) {\n\t\t\tvar style = group[styleName];\n\n\t\t\tstyles[styleName] = group[styleName] = {\n\t\t\t\topen: '\\u001b[' + style[0] + 'm',\n\t\t\t\tclose: '\\u001b[' + style[1] + 'm'\n\t\t\t};\n\t\t});\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t});\n\n\treturn styles;\n}\n\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\nvar escapeStringRegexp = require('escape-string-regexp');\nvar ansiStyles = require('ansi-styles');\nvar stripAnsi = require('strip-ansi');\nvar hasAnsi = require('has-ansi');\nvar supportsColor = require('supports-color');\nvar defineProps = Object.defineProperties;\nvar isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);\n\nfunction Chalk(options) {\n\t// detect mode if not set manually\n\tthis.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;\n}\n\n// use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001b[94m';\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction build(_styles) {\n\tvar builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder.enabled = this.enabled;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\t/* eslint-disable no-proto */\n\tbuilder.__proto__ = proto;\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || !str) {\n\t\treturn str;\n\t}\n\n\tvar nestedStyles = this._styles;\n\tvar i = nestedStyles.length;\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\twhile (i--) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\t// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, [name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(Chalk.prototype, init());\n\nmodule.exports = new Chalk();\nmodule.exports.styles = ansiStyles;\nmodule.exports.hasColor = hasAnsi;\nmodule.exports.stripColor = stripAnsi;\nmodule.exports.supportsColor = supportsColor;\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict';\nvar ansiRegex = require('ansi-regex');\nvar re = new RegExp(ansiRegex().source); // remove the `g` flag\nmodule.exports = re.test.bind(re);\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n","'use strict';\nvar argv = process.argv;\n\nvar terminator = argv.indexOf('--');\nvar hasFlag = function (flag) {\n\tflag = '--' + flag;\n\tvar pos = argv.indexOf(flag);\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\n};\n\nmodule.exports = (function () {\n\tif ('FORCE_COLOR' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { makePropertyLogger } from \"./utils\";\r\n\r\nfunction scopeToString(scope: number) {\r\n    switch (scope) {\r\n        case 1:\r\n            return \"Singleton\";\r\n        case 0:\r\n        default:\r\n            return \"Transient\";\r\n    }\r\n}\r\n\r\nfunction bindingTypeToString(type: number) {\r\n    switch (type) {\r\n        case 1:\r\n            return \"Instance\";\r\n        case 2:\r\n            return \"ConstantValue\";\r\n        case 3:\r\n            return \"DynamicValue\";\r\n        case 4:\r\n            return \"Constructor\";\r\n        case 5:\r\n            return \"Factory\";\r\n        case 6:\r\n            return \"Provider\";\r\n        case 0:\r\n        default:\r\n            return \"Invalid\";\r\n    }\r\n}\r\n\r\nfunction getBindingLogEntry(\r\n    log: string,\r\n    options: ILoggerSettings,\r\n    index: number,\r\n    binding: inversify.IBinding<any>,\r\n    indentationForDepth: string\r\n) {\r\n\r\n    let logProperty = makePropertyLogger(indentationForDepth);\r\n\r\n    log = logProperty(log, 0, \"item\", index);\r\n\r\n    let props = [\r\n        \"type\", \"serviceIdentifier\", \"implementationType\",\r\n        \"activated\", \"cache\", \"constraint\", \"dynamicValue\",\r\n        \"factory\", \"onActivation\", \"provider\", \"scope\"\r\n    ];\r\n\r\n    props.forEach((prop) => {\r\n\r\n        let _bindings: any = options.request.bindings;\r\n        let _binding: any = binding;\r\n\r\n        if (_bindings[prop]) {\r\n\r\n            let value = _binding[prop];\r\n\r\n            switch (prop) {\r\n                case \"scope\":\r\n                    value = scopeToString(_binding[prop]);\r\n                    break;\r\n                 case \"type\":\r\n                    value = bindingTypeToString(_binding[prop]);\r\n                    break;\r\n                 case \"implementationType\":\r\n                    value = (_binding[prop].name || \"undefined\");\r\n                    break;\r\n                default:\r\n                    value = _binding[prop];\r\n                    break;\r\n            }\r\n\r\n            value = (value === null || value === undefined) ? \"null\" : value;\r\n            log = logProperty(log, 1, prop, value);\r\n        }\r\n    });\r\n\r\n    return log;\r\n\r\n}\r\n\r\nexport default getBindingLogEntry;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nlet tree = {\r\n    item: \"└──\"\r\n};\r\n\r\nlet indentation  = \"    \";\r\n\r\nexport { tree, indentation };\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nfunction consoleRenderer(out: string) {\r\n    console.log(out);\r\n}\r\n\r\nexport default consoleRenderer;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nlet deatultOptions: ILoggerSettings = {\r\n    request: {\r\n        bindings: {\r\n            activated: false,\r\n            cache: false,\r\n            constraint: false,\r\n            dynamicValue: false,\r\n            factory: false,\r\n            implementationType: true,\r\n            onActivation: false,\r\n            provider: false,\r\n            scope: false,\r\n            serviceIdentifier: false,\r\n            type: false\r\n        },\r\n        serviceIdentifier: true,\r\n        target: {\r\n            metadata: true,\r\n            name: false,\r\n            serviceIdentifier: false\r\n        }\r\n    },\r\n    time: true\r\n};\r\n\r\nexport default deatultOptions;\r\n","/// <reference path=\"./interfaces.d.ts\" />\n\nimport deatultOptions from \"./default_settings\";\nimport consoleRenderer from \"./default_renderer\";\nimport { tree } from \"./constants\";\nimport getRequestLogEntry from \"./request_logger\";\nimport { getTime, getTimeDiference } from \"./utils\";\n\nfunction makeLoggerMiddleware(settings?: ILoggerSettings, renderer?: (out: string) => void): inversify.IMiddleware {\n\n    let logger = function (next: (context: inversify.IContext) => any) {\n        return function (context: inversify.IContext) {\n\n            if (settings === undefined || settings === null) { settings = deatultOptions; };\n            if (renderer === undefined || renderer === null) { renderer = consoleRenderer; };\n\n            let start =  getTime();\n            let result = next(context);\n            let end = getTime();\n            let log = getRequestLogEntry(`${tree.item} plan\\n`, settings, context.plan.rootRequest, 0, 0);\n\n            if (settings.time) {\n                log = `${log}\\n Time: ${getTimeDiference(start, end)} millisecond/s.\\n`;\n            }\n\n            renderer(log);\n            return result;\n\n        };\n    };\n\n    return logger;\n\n}\n\nexport default makeLoggerMiddleware;\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { indentation } from \"./constants\";\r\nimport { getIndentationForDepth } from \"./utils\";\r\nimport getBindingLogEntry from \"./binding_logger\";\r\nimport getTargetLogEntry from \"./target_logger\";\r\nimport { makePropertyLogger } from \"./utils\";\r\n\r\nfunction getRequestLogEntry(\r\n    log: string,\r\n    options: ILoggerSettings,\r\n    request: inversify.IRequest,\r\n    depth: number,\r\n    index: number\r\n): string {\r\n\r\n    let indentationForDepth = getIndentationForDepth(depth);\r\n    let logProperty = makePropertyLogger(indentationForDepth);\r\n\r\n    log = logProperty(log, 0, \"item\", index);\r\n\r\n    if (options.request.serviceIdentifier === true) {\r\n        log = logProperty(log, 1, \"serviceIdentifier\", request.serviceIdentifier);\r\n    }\r\n\r\n    // bindings\r\n    if (options.request.bindings !== undefined) {\r\n        log = logProperty(log, 1, \"bindings\");\r\n        request.bindings.forEach((binding: inversify.IBinding<any>, i: number) => {\r\n            log = getBindingLogEntry(log, options, i, binding, `${indentationForDepth}${indentation}${indentation}`);\r\n        });\r\n    }\r\n\r\n    // target\r\n    if (options.request.target !== undefined && request.target !== null) {\r\n        log = getTargetLogEntry(log, options, request.target, `${indentationForDepth}${indentation}`);\r\n    }\r\n\r\n    // child requests\r\n    if (request.childRequests.length > 0) {\r\n        log = logProperty(log, 1, \"childRequests\");\r\n    }\r\n\r\n    request.childRequests.forEach((childRequest, i) => {\r\n        log = getRequestLogEntry(log, options, childRequest, (depth + 2), i);\r\n    });\r\n\r\n    return log;\r\n\r\n}\r\n\r\nexport default getRequestLogEntry;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { makePropertyLogger } from \"./utils\";\r\n\r\nfunction getTargetLogEntry(\r\n    log: string,\r\n    options: ILoggerSettings,\r\n    target: inversify.ITarget,\r\n    indentationForDepth: string\r\n) {\r\n\r\n    let logProperty = makePropertyLogger(indentationForDepth);\r\n\r\n    log = logProperty(log, 0, \"target\");\r\n\r\n    if (options.request.target.name) {\r\n        log = logProperty(log, 1, \"name\", (target.name.value() || \"undefined\"));\r\n    }\r\n\r\n    if (options.request.target.serviceIdentifier) {\r\n        log = logProperty(log, 1, \"serviceIdentifier\", target.serviceIdentifier);\r\n    }\r\n\r\n    if (options.request.target.metadata && Array.isArray(target.metadata)) {\r\n        log = logProperty(log, 1, \"metadata\");\r\n        target.metadata.forEach((m: inversify.IMetadata, i: number) => {\r\n            log = logProperty(log, 2, \"item\", i);\r\n            log = logProperty(log, 3, \"key\", m.key);\r\n            log = logProperty(log, 3, \"value\", m.value);\r\n        });\r\n    }\r\n\r\n    return log;\r\n\r\n}\r\n\r\nexport default getTargetLogEntry;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { tree, indentation } from \"./constants\";\r\nimport * as chalk from \"chalk\";\r\n\r\nlet yellow  = chalk.yellow;\r\n\r\ndeclare var process: any;\r\ndeclare var window: any;\r\n\r\nfunction getIndentationForDepth(depth: number) {\r\n    let indentationForDepth = indentation;\r\n    for (let i = depth; i--; i >= 0) {\r\n        indentationForDepth = `${indentationForDepth}${indentation}`;\r\n    }\r\n    return indentationForDepth;\r\n}\r\n\r\nfunction getTime() {\r\n\r\n    if (typeof window !== \"undefined\") {\r\n\r\n        // modern browsers\r\n        return window.performance.now();\r\n\r\n    } else if (typeof process !== \"undefined\") {\r\n\r\n        // node\r\n        let nanoseconds = process.hrtime()[1];\r\n        let milliseconds = nanoseconds / 1000000;\r\n        return milliseconds;\r\n\r\n    } else {\r\n\r\n        // old browsers\r\n        return new Date().getTime();\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction getTimeDiference( start: number, end: number) {\r\n    let diff = end - start;\r\n    let formatted = diff.toFixed(2);\r\n    return formatted;\r\n}\r\n\r\nfunction makePropertyLogger(indentationForDepth: string) {\r\n    return function (log: string, tabCount: number, key: string, value?: any) {\r\n\r\n        let line = `${log}${indentationForDepth}`;\r\n\r\n        for (let i = tabCount; i > 0; i--) {\r\n            line = `${line}${indentation}`;\r\n        }\r\n\r\n        line = `${line}${tree.item} ${key}`;\r\n\r\n        if (value !== undefined) {\r\n            line = `${line} : ${yellow(value.toString())}`;\r\n        }\r\n\r\n        return `${line}\\n`;\r\n    };\r\n}\r\n\r\nexport { getIndentationForDepth, getTime, getTimeDiference, makePropertyLogger };\r\n"],"sourceRoot":"/source/"}