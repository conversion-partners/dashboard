{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/ansi-regex/index.js","index.min.js","node_modules/ansi-styles/index.js","node_modules/chalk/index.js","node_modules/escape-string-regexp/index.js","node_modules/has-ansi/index.js","node_modules/process/browser.js","node_modules/strip-ansi/index.js","node_modules/supports-color/index.js","src/binding_logger.ts","src/constants.ts","src/default_renderer.ts","src/default_settings.ts","src/index.ts","src/request_logger.ts","src/target_logger.ts","src/utils.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","inversifyLoggerMidleware","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","2","assembleStyles","styles","modifiers","reset","bold","dim","italic","underline","inverse","hidden","strikethrough","colors","black","red","green","yellow","blue","magenta","cyan","white","gray","bgColors","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","grey","Object","keys","forEach","groupName","group","styleName","style","open","close","defineProperty","value","enumerable","get","3","process","Chalk","options","enabled","undefined","supportsColor","build","_styles","builder","applyStyle","apply","arguments","__proto__","proto","args","argsLen","str","String","nestedStyles","originalDim","ansiStyles","isSimpleWindowsTerm","indexOf","replace","closeRe","init","ret","name","escapeStringRegexp","stripAnsi","hasAnsi","defineProps","defineProperties","platform","test","env","TERM","key","RegExp","concat","prototype","hasColor","stripColor","_process","ansi-styles","escape-string-regexp","has-ansi","strip-ansi","supports-color","4","matchOperatorsRe","TypeError","5","ansiRegex","re","source","bind","ansi-regex","6","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","setTimeout","len","run","clearTimeout","Item","fun","array","noop","nextTick","Array","push","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","7","8","terminator","hasFlag","flag","pos","stdout","isTTY","9","scopeToString","scope","bindingTypeToString","type","getBindingLogEntry","log","index","indentationForDepth","logProperty","utils_1","makePropertyLogger","props","prop","_bindings","request","bindings","_binding","./utils","10","tree","item","indentation","11","consoleRenderer","out","console","12","deatultOptions","activated","cache","constraint","dynamicValue","factory","implementationType","onActivation","provider","serviceIdentifier","target","metadata","time","13","makeLoggerMiddleware","settings","renderer","logger","next","context","default_settings_1","default_renderer_1","start","getTime","result","end","request_logger_1","constants_1","plan","rootRequest","getTimeDiference","./constants","./default_renderer","./default_settings","./request_logger","14","getRequestLogEntry","depth","getIndentationForDepth","utils_2","binding_logger_1","target_logger_1","childRequests","childRequest","./binding_logger","./target_logger","15","getTargetLogEntry","isArray","m","16","performance","now","nanoseconds","hrtime","milliseconds","Date","diff","formatted","toFixed","tabCount","line","toString","chalk"],"mappings":";;;;;;CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,yBAAAV,MAAA,WAAA,MAAA,SAAAW,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,GCAA,YACAC,GAAAD,QAAA,WACA,MAAA,oFCIM0B,GAAG,SAASR,EAAQjB,EAAOD,GCNjC,YAEA,SAAA2B,KACA,GAAAC,IACAC,WACAC,OAAA,EAAA,GACAC,MAAA,EAAA,IACAC,KAAA,EAAA,IACAC,QAAA,EAAA,IACAC,WAAA,EAAA,IACAC,SAAA,EAAA,IACAC,QAAA,EAAA,IACAC,eAAA,EAAA,KAEAC,QACAC,OAAA,GAAA,IACAC,KAAA,GAAA,IACAC,OAAA,GAAA,IACAC,QAAA,GAAA,IACAC,MAAA,GAAA,IACAC,SAAA,GAAA,IACAC,MAAA,GAAA,IACAC,OAAA,GAAA,IACAC,MAAA,GAAA,KAEAC,UACAC,SAAA,GAAA,IACAC,OAAA,GAAA,IACAC,SAAA,GAAA,IACAC,UAAA,GAAA,IACAC,QAAA,GAAA,IACAC,WAAA,GAAA,IACAC,QAAA,GAAA,IACAC,SAAA,GAAA,KAyBA,OApBA5B,GAAAU,OAAAmB,KAAA7B,EAAAU,OAAAS,KAEAW,OAAAC,KAAA/B,GAAAgC,QAAA,SAAAC,GACA,GAAAC,GAAAlC,EAAAiC,EAEAH,QAAAC,KAAAG,GAAAF,QAAA,SAAAG,GACA,GAAAC,GAAAF,EAAAC,EAEAnC,GAAAmC,GAAAD,EAAAC,IACAE,KAAA,KAAAD,EAAA,GAAA,IACAE,MAAA,KAAAF,EAAA,GAAA,OAIAN,OAAAS,eAAAvC,EAAAiC,GACAO,MAAAN,EACAO,YAAA,MAIAzC,EAGA8B,OAAAS,eAAAlE,EAAA,WACAoE,YAAA,EACAC,IAAA3C,SDUM4C,GAAG,SAASrD,EAAQjB,EAAOD,IACjC,SAAWwE,GE1EX,YASA,SAAAC,GAAAC,GAEAlE,KAAAmE,QAAAD,GAAAE,SAAAF,EAAAC,QAAAD,EAAAC,QAAAE,EA0BA,QAAAC,GAAAC,GACA,GAAAC,GAAA,WACA,MAAAC,GAAAC,MAAAF,EAAAG,WAUA,OAPAH,GAAAD,QAAAA,EACAC,EAAAL,QAAAnE,KAAAmE,QAIAK,EAAAI,UAAAC,EAEAL,EAGA,QAAAC,KAEA,GAAAK,GAAAH,UACAI,EAAAD,EAAA9D,OACAgE,EAAA,IAAAD,GAAAE,OAAAN,UAAA,GAEA,IAAAI,EAAA,EAEA,IAAA,GAAAtE,GAAA,EAAAsE,EAAAtE,EAAAA,IACAuE,GAAA,IAAAF,EAAArE,EAIA,KAAAT,KAAAmE,UAAAa,EACA,MAAAA,EAGA,IAAAE,GAAAlF,KAAAuE,QACA5D,EAAAuE,EAAAlE,OAKAmE,EAAAC,EAAA5D,IAAAiC,IAKA,MAJA4B,GAAA,KAAAH,EAAAI,QAAA,SAAA,KAAAJ,EAAAI,QAAA,UACAF,EAAA5D,IAAAiC,KAAA,IAGA9C,KAAA,CACA,GAAAE,GAAAuE,EAAAF,EAAAvE,GAKAqE,GAAAnE,EAAA4C,KAAAuB,EAAAO,QAAA1E,EAAA2E,QAAA3E,EAAA4C,MAAA5C,EAAA6C,MAMA,MAFA0B,GAAA5D,IAAAiC,KAAA0B,EAEAH,EAGA,QAAAS,KACA,GAAAC,KAUA,OARAxC,QAAAC,KAAA/B,GAAAgC,QAAA,SAAAuC,GACAD,EAAAC,IACA7B,IAAA,WACA,MAAAQ,GAAAvD,KAAAf,MAAA2F,QAKAD,EAzGA,GAAAE,GAAAlF,EAAA,wBACA0E,EAAA1E,EAAA,eACAmF,EAAAnF,EAAA,cACAoF,EAAApF,EAAA,YACA2D,EAAA3D,EAAA,kBACAqF,EAAA7C,OAAA8C,iBACAX,EAAA,UAAArB,EAAAiC,WAAA,UAAAC,KAAAlC,EAAAmC,IAAAC,KAQAf,KACAD,EAAAjD,KAAAsB,KAAA,QAGA,IAAArC,GAAA,WACA,GAAAsE,KAYA,OAVAxC,QAAAC,KAAAiC,GAAAhC,QAAA,SAAAiD,GACAjB,EAAAiB,GAAAb,QAAA,GAAAc,QAAAV,EAAAR,EAAAiB,GAAA3C,OAAA,KAEAgC,EAAAW,IACAvC,IAAA,WACA,MAAAQ,GAAAvD,KAAAf,KAAAA,KAAAuE,QAAAgC,OAAAF,QAKAX,KAGAb,EAAAkB,EAAA,aAAA3E,EA0EA2E,GAAA9B,EAAAuC,UAAAf,KAEAhG,EAAAD,QAAA,GAAAyE,GACAxE,EAAAD,QAAA4B,OAAAgE,EACA3F,EAAAD,QAAAiH,SAAAX,EACArG,EAAAD,QAAAkH,WAAAb,EACApG,EAAAD,QAAA6E,cAAAA,IF6EGtD,KAAKf,KAAKU,EAAQ,eAElBiG,SAAW,EAAEC,cAAc,EAAEC,uBAAuB,EAAEC,WAAW,EAAEC,aAAa,EAAEC,iBAAiB,IAAIC,GAAG,SAASvG,EAAQjB,EAAOD,GGlMrI,YAEA,IAAA0H,GAAA,qBAEAzH,GAAAD,QAAA,SAAAwF,GACA,GAAA,gBAAAA,GACA,KAAA,IAAAmC,WAAA,oBAGA,OAAAnC,GAAAO,QAAA2B,EAAA,cHsMME,GAAG,SAAS1G,EAAQjB,EAAOD,GI/MjC,YACA,IAAA6H,GAAA3G,EAAA,cACA4G,EAAA,GAAAhB,QAAAe,IAAAE,OACA9H,GAAAD,QAAA8H,EAAApB,KAAAsB,KAAAF,KJkNGG,aAAa,IAAIC,GAAG,SAAShH,EAAQjB,EAAOD,GK7M/C,QAAAmI,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAA7G,OACA8G,EAAAD,EAAAtB,OAAAuB,GAEAC,EAAA,GAEAD,EAAA9G,QACAgH,KAIA,QAAAA,KACA,IAAAJ,EAAA,CAGA,GAAAK,GAAAC,WAAAP,EACAC,IAAA,CAGA,KADA,GAAAO,GAAAL,EAAA9G,OACAmH,GAAA,CAGA,IAFAN,EAAAC,EACAA,OACAC,EAAAI,GACAN,GACAA,EAAAE,GAAAK,KAGAL,GAAA,GACAI,EAAAL,EAAA9G,OAEA6G,EAAA,KACAD,GAAA,EACAS,aAAAJ,IAiBA,QAAAK,GAAAC,EAAAC,GACAxI,KAAAuI,IAAAA,EACAvI,KAAAwI,MAAAA,EAYA,QAAAC,MAzEA,GAGAZ,GAHA7D,EAAAvE,EAAAD,WACAsI,KACAF,GAAA,EAEAG,EAAA,EAyCA/D,GAAA0E,SAAA,SAAAH,GACA,GAAAzD,GAAA,GAAA6D,OAAAhE,UAAA3D,OAAA,EACA,IAAA2D,UAAA3D,OAAA,EACA,IAAA,GAAAL,GAAA,EAAAA,EAAAgE,UAAA3D,OAAAL,IACAmE,EAAAnE,EAAA,GAAAgE,UAAAhE,EAGAmH,GAAAc,KAAA,GAAAN,GAAAC,EAAAzD,IACA,IAAAgD,EAAA9G,QAAA4G,GACAM,WAAAF,EAAA,IASAM,EAAA9B,UAAA4B,IAAA,WACApI,KAAAuI,IAAA7D,MAAA,KAAA1E,KAAAwI,QAEAxE,EAAA6E,MAAA,UACA7E,EAAA8E,SAAA,EACA9E,EAAAmC,OACAnC,EAAA+E,QACA/E,EAAAgF,QAAA,GACAhF,EAAAiF,YAIAjF,EAAAkF,GAAAT,EACAzE,EAAAmF,YAAAV,EACAzE,EAAAoF,KAAAX,EACAzE,EAAAqF,IAAAZ,EACAzE,EAAAsF,eAAAb,EACAzE,EAAAuF,mBAAAd,EACAzE,EAAAwF,KAAAf,EAEAzE,EAAAyF,QAAA,SAAA9D,GACA,KAAA,IAAA/E,OAAA,qCAGAoD,EAAA0F,IAAA,WAAA,MAAA,KACA1F,EAAA2F,MAAA,SAAAC,GACA,KAAA,IAAAhJ,OAAA,mCAEAoD,EAAA6F,MAAA,WAAA,MAAA,SLwNMC,GAAG,SAASpJ,EAAQjB,EAAOD,GMrTjC,YACA,IAAA6H,GAAA3G,EAAA,eAEAjB,GAAAD,QAAA,SAAAwF,GACA,MAAA,gBAAAA,GAAAA,EAAAO,QAAA8B,EAAA,IAAArC,KNyTGyC,aAAa,IAAIsC,GAAG,SAASrJ,EAAQjB,EAAOD,IAC/C,SAAWwE,GO9TX,YACA,IAAA+E,GAAA/E,EAAA+E,KAEAiB,EAAAjB,EAAAzD,QAAA,MACA2E,EAAA,SAAAC,GACAA,EAAA,KAAAA,CACA,IAAAC,GAAApB,EAAAzD,QAAA4E,EACA,OAAA,KAAAC,IAAA,KAAAH,EAAAA,EAAAG,GAAA,GAGA1K,GAAAD,QAAA,WACA,MAAA,eAAAwE,GAAAmC,KACA,EAGA8D,EAAA,aACAA,EAAA,cACAA,EAAA,gBACA,EAGAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,iBACA,EAGAjG,EAAAoG,SAAApG,EAAAoG,OAAAC,OACA,EAGA,UAAArG,EAAAiC,UACA,EAGA,aAAAjC,GAAAmC,KACA,EAGA,SAAAnC,EAAAmC,IAAAC,MACA,IAGA,iDAAAF,KAAAlC,EAAAmC,IAAAC,WPsUGrF,KAAKf,KAAKU,EAAQ,eAElBiG,SAAW,IAAI2D,GAAG,SAAS5J,EAAQjB,EAAOD,GAC7C,YQjXA,SAAA+K,GAAuBC,GACnB,OAAQA,GACJ,IAAK,GACD,MAAO,WACX,KAAK,GACL,QACI,MAAO,aAInB,QAAAC,GAA6BC,GACzB,OAAQA,GACJ,IAAK,GACD,MAAO,UACX,KAAK,GACD,MAAO,eACX,KAAK,GACD,MAAO,cACX,KAAK,GACD,MAAO,aACX,KAAK,GACD,MAAO,SACX,KAAK,GACD,MAAO,UACX,KAAK,GACL,QACI,MAAO,WAInB,QAAAC,GACIC,EACA1G,EACA2G,EACApB,EACAqB,GAGA,GAAIC,GAAcC,EAAAC,mBAAmBH,EAErCF,GAAMG,EAAYH,EAAK,EAAG,OAAQC,EAElC,IAAIK,IACA,OAAQ,oBAAqB,qBAC7B,YAAa,QAAS,aAAc,eACpC,UAAW,eAAgB,WAAY,QAgC3C,OA7BAA,GAAM9H,QAAQ,SAAC+H,GAEX,GAAIC,GAAiBlH,EAAQmH,QAAQC,SACjCC,EAAgB9B,CAEpB,IAAI2B,EAAUD,GAAO,CAEjB,GAAIvH,GAAQ2H,EAASJ,EAErB,QAAQA,GACJ,IAAK,QACDvH,EAAQ2G,EAAcgB,EAASJ,GAC/B,MACH,KAAK,OACFvH,EAAQ6G,EAAoBc,EAASJ,GACrC,MACH,KAAK,qBACFvH,EAAS2H,EAASJ,GAAMxF,MAAQ,WAChC,MACJ,SACI/B,EAAQ2H,EAASJ,GAIzBvH,EAAmB,OAAVA,GAA4BQ,SAAVR,EAAuB,OAASA,EAC3DgH,EAAMG,EAAYH,EAAK,EAAGO,EAAMvH,MAIjCgH,EA/EX,GAAAI,GAAAtK,EAAmC,UAmFnCwC,QAAAS,eAAAnE,EAAA,cAAAoE,OAAA,IRgWApE,EAAAA,WQhWemL,IRkWZa,UAAU,KAAKC,IAAI,SAAS/K,EAAQjB,EAAOD,GAC9C,YStbA,IAAIkM,IACAC,KAAM,MAKDnM,GAAAkM,KAAIA,CAFb,IAAIE,GAAe,MAEJpM,GAAAoM,YAAWA,OTwbpBC,IAAI,SAASnL,EAAQjB,EAAOD,GAClC,YU/bA,SAAAsM,GAAyBC,GACrBC,QAAQpB,IAAImB,GAGhB7I,OAAAS,eAAAnE,EAAA,cAAAoE,OAAA,IVgcApE,EAAAA,WUhcesM,OVkcTG,IAAI,SAASvL,EAAQjB,EAAOD,GAClC,YWvcA,IAAI0M,IACAb,SACIC,UACIa,WAAW,EACXC,OAAO,EACPC,YAAY,EACZC,cAAc,EACdC,SAAS,EACTC,oBAAoB,EACpBC,cAAc,EACdC,UAAU,EACVlC,OAAO,EACPmC,mBAAmB,EACnBjC,MAAM,GAEViC,mBAAmB,EACnBC,QACIC,UAAU,EACVlH,MAAM,EACNgH,mBAAmB,IAG3BG,MAAM,EAGV5J,QAAAS,eAAAnE,EAAA,cAAAoE,OAAA,IXwcApE,EAAAA,WWxce0M,OX0cTa,IAAI,SAASrM,EAAQjB,EAAOD,GAClC,YY9dA,SAAAwN,GAA8BC,EAA4BC,GAEtD,GAAIC,GAAS,SAAUC,GACnB,MAAO,UAAUC,GAEIjJ,SAAb6I,GAAuC,OAAbA,IAAqBA,EAAWK,EAAAA,YAC7ClJ,SAAb8I,GAAuC,OAAbA,IAAqBA,EAAWK,EAAAA,WAE9D,IAAIC,GAASxC,EAAAyC,UACTC,EAASN,EAAKC,GACdM,EAAM3C,EAAAyC,UACN7C,EAAMgD,EAAAA,WAAsBC,EAAAnC,KAAKC,KAAI,UAAWsB,EAAUI,EAAQS,KAAKC,YAAa,EAAG,EAO3F,OALId,GAASH,OACTlC,EAASA,EAAG,YAAYI,EAAAgD,iBAAiBR,EAAOG,GAAI,qBAGxDT,EAAStC,GACF8C,GAKf,OAAOP,GA7BX,GAAAG,GAAA5M,EAA2B,sBAC3B6M,EAAA7M,EAA4B,sBAC5BmN,EAAAnN,EAAqB,eACrBkN,EAAAlN,EAA+B,oBAC/BsK,EAAAtK,EAA0C,UA6B1CwC,QAAAS,eAAAnE,EAAA,cAAAoE,OAAA,IZkeApE,EAAAA,WYleewN,IZoeZiB,cAAc,GAAGC,qBAAqB,GAAGC,qBAAqB,GAAGC,mBAAmB,GAAG5C,UAAU,KAAK6C,IAAI,SAAS3N,EAAQjB,EAAOD,GACrI,YahgBA,SAAA8O,GACI1D,EACA1G,EACAmH,EACAkD,EACA1D,GAGA,GAAIC,GAAsBE,EAAAwD,uBAAuBD,GAC7CxD,EAAc0D,EAAAxD,mBAAmBH,EA8BrC,OA5BAF,GAAMG,EAAYH,EAAK,EAAG,OAAQC,GAE9B3G,EAAQmH,QAAQsB,qBAAsB,IACtC/B,EAAMG,EAAYH,EAAK,EAAG,oBAAqBS,EAAQsB,oBAI1BvI,SAA7BF,EAAQmH,QAAQC,WAChBV,EAAMG,EAAYH,EAAK,EAAG,YAC1BS,EAAQC,SAASlI,QAAQ,SAACqG,EAAkC9I,GACxDiK,EAAM8D,EAAAA,WAAmB9D,EAAK1G,EAASvD,EAAG8I,EAAS,GAAGqB,EAAsB+C,EAAAjC,YAAciC,EAAAjC,gBAKnExH,SAA3BF,EAAQmH,QAAQuB,QAA2C,OAAnBvB,EAAQuB,SAChDhC,EAAM+D,EAAAA,WAAkB/D,EAAK1G,EAASmH,EAAQuB,OAAQ,GAAG9B,EAAsB+C,EAAAjC,cAI/EP,EAAQuD,cAAc5N,OAAS,IAC/B4J,EAAMG,EAAYH,EAAK,EAAG,kBAG9BS,EAAQuD,cAAcxL,QAAQ,SAACyL,EAAclO,GACzCiK,EAAM0D,EAAmB1D,EAAK1G,EAAS2K,EAAeN,EAAQ,EAAI5N,KAG/DiK,EA7CX,GAAAiD,GAAAnN,EAA4B,eAC5BsK,EAAAtK,EAAuC,WACvCgO,EAAAhO,EAA+B,oBAC/BiO,EAAAjO,EAA8B,mBAC9B+N,EAAA/N,EAAmC,UA6CnCwC,QAAAS,eAAAnE,EAAA,cAAAoE,OAAA,IbofApE,EAAAA,Wapfe8O,IbsfZQ,mBAAmB,EAAEb,cAAc,GAAGc,kBAAkB,GAAGvD,UAAU,KAAKwD,IAAI,SAAStO,EAAQjB,EAAOD,GACzG,YctiBA,SAAAyP,GACIrE,EACA1G,EACA0I,EACA9B,GAGA,GAAIC,GAAcC,EAAAC,mBAAmBH,EAqBrC,OAnBAF,GAAMG,EAAYH,EAAK,EAAG,UAEtB1G,EAAQmH,QAAQuB,OAAOjH,OACvBiF,EAAMG,EAAYH,EAAK,EAAG,OAASgC,EAAOjH,KAAK/B,SAAW,cAG1DM,EAAQmH,QAAQuB,OAAOD,oBACvB/B,EAAMG,EAAYH,EAAK,EAAG,oBAAqBgC,EAAOD,oBAGtDzI,EAAQmH,QAAQuB,OAAOC,UAAYlE,MAAMuG,QAAQtC,EAAOC,YACxDjC,EAAMG,EAAYH,EAAK,EAAG,YAC1BgC,EAAOC,SAASzJ,QAAQ,SAAC+L,EAAwBxO,GAC7CiK,EAAMG,EAAYH,EAAK,EAAG,OAAQjK,GAClCiK,EAAMG,EAAYH,EAAK,EAAG,MAAOuE,EAAE9I,KACnCuE,EAAMG,EAAYH,EAAK,EAAG,QAASuE,EAAEvL,UAItCgH,EA9BX,GAAAI,GAAAtK,EAAmC,UAkCnCwC,QAAAS,eAAAnE,EAAA,cAAAoE,OAAA,Id4hBApE,EAAAA,Wc5hBeyP,Id8hBZzD,UAAU,KAAK4D,IAAI,SAAS1O,EAAQjB,EAAOD,IAC9C,SAAWwE,GACX,Ye1jBA,SAAAwK,GAAgCD,GAE5B,IAAK,GADDzD,GAAsB+C,EAAAjC,YACjBjL,EAAI4N,EAAO5N,IAAKA,GAAK,EAC1BmK,EAAsB,GAAGA,EAAsB+C,EAAAjC,WAEnD,OAAOd,GAGX,QAAA2C,KAEI,GAAsB,mBAAX5N,QAGP,MAAOA,QAAOwP,YAAYC,KAEvB,IAAuB,mBAAZtL,GAAyB,CAGvC,GAAIuL,GAAcvL,EAAQwL,SAAS,GAC/BC,EAAeF,EAAc,GACjC,OAAOE,GAKP,OAAO,GAAIC,OAAOjC,UAM1B,QAAAO,GAA2BR,EAAeG,GACtC,GAAIgC,GAAOhC,EAAMH,EACboC,EAAYD,EAAKE,QAAQ,EAC7B,OAAOD,GAGX,QAAA3E,GAA4BH,GACxB,MAAO,UAAUF,EAAakF,EAAkBzJ,EAAazC,GAIzD,IAAK,GAFDmM,GAAO,GAAGnF,EAAME,EAEXnK,EAAImP,EAAUnP,EAAI,EAAGA,IAC1BoP,EAAO,GAAGA,EAAOlC,EAAAjC,WASrB,OANAmE,GAAO,GAAGA,EAAOlC,EAAAnC,KAAKC,KAAI,IAAItF,EAEhBjC,SAAVR,IACAmM,EAAUA,EAAI,MAAM7N,EAAO0B,EAAMoM,aAG3BD,EAAI,MA5DtB,GAAAlC,GAAAnN,EAAkC,eACtBuP,EAAKvP,EAAM,SAEnBwB,EAAU+N,EAAM/N,MA6DX1C,GAAAgP,uBAAsBA,EAAEhP,EAAAiO,QAAOA,EAAEjO,EAAAwO,iBAAgBA,EAAExO,EAAAyL,mBAAkBA,IfijB3ElK,KAAKf,KAAKU,EAAQ,eAElBuN,cAAc,GAAGtH,SAAW,EAAEsJ,MAAQ,SAAS,KAAK","file":"index.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.inversifyLoggerMidleware = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\nmodule.exports = function () {\n\treturn /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g;\n};\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nfunction assembleStyles () {\n\tvar styles = {\n\t\tmodifiers: {\n\t\t\treset: [0, 0],\n\t\t\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolors: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39]\n\t\t},\n\t\tbgColors: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49]\n\t\t}\n\t};\n\n\t// fix humans\n\tstyles.colors.grey = styles.colors.gray;\n\n\tObject.keys(styles).forEach(function (groupName) {\n\t\tvar group = styles[groupName];\n\n\t\tObject.keys(group).forEach(function (styleName) {\n\t\t\tvar style = group[styleName];\n\n\t\t\tstyles[styleName] = group[styleName] = {\n\t\t\t\topen: '\\u001b[' + style[0] + 'm',\n\t\t\t\tclose: '\\u001b[' + style[1] + 'm'\n\t\t\t};\n\t\t});\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t});\n\n\treturn styles;\n}\n\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n\n},{}],3:[function(require,module,exports){\n(function (process){\n'use strict';\nvar escapeStringRegexp = require('escape-string-regexp');\nvar ansiStyles = require('ansi-styles');\nvar stripAnsi = require('strip-ansi');\nvar hasAnsi = require('has-ansi');\nvar supportsColor = require('supports-color');\nvar defineProps = Object.defineProperties;\nvar isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);\n\nfunction Chalk(options) {\n\t// detect mode if not set manually\n\tthis.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;\n}\n\n// use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001b[94m';\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction build(_styles) {\n\tvar builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder.enabled = this.enabled;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\t/* eslint-disable no-proto */\n\tbuilder.__proto__ = proto;\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || !str) {\n\t\treturn str;\n\t}\n\n\tvar nestedStyles = this._styles;\n\tvar i = nestedStyles.length;\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\twhile (i--) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\t// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, [name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(Chalk.prototype, init());\n\nmodule.exports = new Chalk();\nmodule.exports.styles = ansiStyles;\nmodule.exports.hasColor = hasAnsi;\nmodule.exports.stripColor = stripAnsi;\nmodule.exports.supportsColor = supportsColor;\n\n}).call(this,require('_process'))\n\n},{\"_process\":6,\"ansi-styles\":2,\"escape-string-regexp\":4,\"has-ansi\":5,\"strip-ansi\":7,\"supports-color\":8}],4:[function(require,module,exports){\n'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n\n},{}],5:[function(require,module,exports){\n'use strict';\nvar ansiRegex = require('ansi-regex');\nvar re = new RegExp(ansiRegex().source); // remove the `g` flag\nmodule.exports = re.test.bind(re);\n\n},{\"ansi-regex\":1}],6:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],7:[function(require,module,exports){\n'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n\n},{\"ansi-regex\":1}],8:[function(require,module,exports){\n(function (process){\n'use strict';\nvar argv = process.argv;\n\nvar terminator = argv.indexOf('--');\nvar hasFlag = function (flag) {\n\tflag = '--' + flag;\n\tvar pos = argv.indexOf(flag);\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\n};\n\nmodule.exports = (function () {\n\tif ('FORCE_COLOR' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n\n}).call(this,require('_process'))\n\n},{\"_process\":6}],9:[function(require,module,exports){\n\"use strict\";\nvar utils_1 = require(\"./utils\");\nfunction scopeToString(scope) {\n    switch (scope) {\n        case 1:\n            return \"Singleton\";\n        case 0:\n        default:\n            return \"Transient\";\n    }\n}\nfunction bindingTypeToString(type) {\n    switch (type) {\n        case 1:\n            return \"Instance\";\n        case 2:\n            return \"ConstantValue\";\n        case 3:\n            return \"DynamicValue\";\n        case 4:\n            return \"Constructor\";\n        case 5:\n            return \"Factory\";\n        case 6:\n            return \"Provider\";\n        case 0:\n        default:\n            return \"Invalid\";\n    }\n}\nfunction getBindingLogEntry(log, options, index, binding, indentationForDepth) {\n    var logProperty = utils_1.makePropertyLogger(indentationForDepth);\n    log = logProperty(log, 0, \"item\", index);\n    var props = [\n        \"type\", \"serviceIdentifier\", \"implementationType\",\n        \"activated\", \"cache\", \"constraint\", \"dynamicValue\",\n        \"factory\", \"onActivation\", \"provider\", \"scope\"\n    ];\n    props.forEach(function (prop) {\n        var _bindings = options.request.bindings;\n        var _binding = binding;\n        if (_bindings[prop]) {\n            var value = _binding[prop];\n            switch (prop) {\n                case \"scope\":\n                    value = scopeToString(_binding[prop]);\n                    break;\n                case \"type\":\n                    value = bindingTypeToString(_binding[prop]);\n                    break;\n                case \"implementationType\":\n                    value = (_binding[prop].name || \"undefined\");\n                    break;\n                default:\n                    value = _binding[prop];\n                    break;\n            }\n            value = (value === null || value === undefined) ? \"null\" : value;\n            log = logProperty(log, 1, prop, value);\n        }\n    });\n    return log;\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = getBindingLogEntry;\n\n},{\"./utils\":16}],10:[function(require,module,exports){\n\"use strict\";\nvar tree = {\n    item: \"└──\"\n};\nexports.tree = tree;\nvar indentation = \"    \";\nexports.indentation = indentation;\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\nfunction consoleRenderer(out) {\n    console.log(out);\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = consoleRenderer;\n\n},{}],12:[function(require,module,exports){\n\"use strict\";\nvar deatultOptions = {\n    request: {\n        bindings: {\n            activated: false,\n            cache: false,\n            constraint: false,\n            dynamicValue: false,\n            factory: false,\n            implementationType: true,\n            onActivation: false,\n            provider: false,\n            scope: false,\n            serviceIdentifier: false,\n            type: false\n        },\n        serviceIdentifier: true,\n        target: {\n            metadata: true,\n            name: false,\n            serviceIdentifier: false\n        }\n    },\n    time: true\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = deatultOptions;\n\n},{}],13:[function(require,module,exports){\n\"use strict\";\nvar default_settings_1 = require(\"./default_settings\");\nvar default_renderer_1 = require(\"./default_renderer\");\nvar constants_1 = require(\"./constants\");\nvar request_logger_1 = require(\"./request_logger\");\nvar utils_1 = require(\"./utils\");\nfunction makeLoggerMiddleware(settings, renderer) {\n    var logger = function (next) {\n        return function (context) {\n            if (settings === undefined || settings === null) {\n                settings = default_settings_1.default;\n            }\n            ;\n            if (renderer === undefined || renderer === null) {\n                renderer = default_renderer_1.default;\n            }\n            ;\n            var start = utils_1.getTime();\n            var result = next(context);\n            var end = utils_1.getTime();\n            var log = request_logger_1.default(constants_1.tree.item + \" plan\\n\", settings, context.plan.rootRequest, 0, 0);\n            if (settings.time) {\n                log = log + \"\\n Time: \" + utils_1.getTimeDiference(start, end) + \" millisecond/s.\\n\";\n            }\n            renderer(log);\n            return result;\n        };\n    };\n    return logger;\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = makeLoggerMiddleware;\n\n},{\"./constants\":10,\"./default_renderer\":11,\"./default_settings\":12,\"./request_logger\":14,\"./utils\":16}],14:[function(require,module,exports){\n\"use strict\";\nvar constants_1 = require(\"./constants\");\nvar utils_1 = require(\"./utils\");\nvar binding_logger_1 = require(\"./binding_logger\");\nvar target_logger_1 = require(\"./target_logger\");\nvar utils_2 = require(\"./utils\");\nfunction getRequestLogEntry(log, options, request, depth, index) {\n    var indentationForDepth = utils_1.getIndentationForDepth(depth);\n    var logProperty = utils_2.makePropertyLogger(indentationForDepth);\n    log = logProperty(log, 0, \"item\", index);\n    if (options.request.serviceIdentifier === true) {\n        log = logProperty(log, 1, \"serviceIdentifier\", request.serviceIdentifier);\n    }\n    if (options.request.bindings !== undefined) {\n        log = logProperty(log, 1, \"bindings\");\n        request.bindings.forEach(function (binding, i) {\n            log = binding_logger_1.default(log, options, i, binding, \"\" + indentationForDepth + constants_1.indentation + constants_1.indentation);\n        });\n    }\n    if (options.request.target !== undefined && request.target !== null) {\n        log = target_logger_1.default(log, options, request.target, \"\" + indentationForDepth + constants_1.indentation);\n    }\n    if (request.childRequests.length > 0) {\n        log = logProperty(log, 1, \"childRequests\");\n    }\n    request.childRequests.forEach(function (childRequest, i) {\n        log = getRequestLogEntry(log, options, childRequest, (depth + 2), i);\n    });\n    return log;\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = getRequestLogEntry;\n\n},{\"./binding_logger\":9,\"./constants\":10,\"./target_logger\":15,\"./utils\":16}],15:[function(require,module,exports){\n\"use strict\";\nvar utils_1 = require(\"./utils\");\nfunction getTargetLogEntry(log, options, target, indentationForDepth) {\n    var logProperty = utils_1.makePropertyLogger(indentationForDepth);\n    log = logProperty(log, 0, \"target\");\n    if (options.request.target.name) {\n        log = logProperty(log, 1, \"name\", (target.name.value() || \"undefined\"));\n    }\n    if (options.request.target.serviceIdentifier) {\n        log = logProperty(log, 1, \"serviceIdentifier\", target.serviceIdentifier);\n    }\n    if (options.request.target.metadata && Array.isArray(target.metadata)) {\n        log = logProperty(log, 1, \"metadata\");\n        target.metadata.forEach(function (m, i) {\n            log = logProperty(log, 2, \"item\", i);\n            log = logProperty(log, 3, \"key\", m.key);\n            log = logProperty(log, 3, \"value\", m.value);\n        });\n    }\n    return log;\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = getTargetLogEntry;\n\n},{\"./utils\":16}],16:[function(require,module,exports){\n(function (process){\n\"use strict\";\nvar constants_1 = require(\"./constants\");\nvar chalk = require(\"chalk\");\nvar yellow = chalk.yellow;\nfunction getIndentationForDepth(depth) {\n    var indentationForDepth = constants_1.indentation;\n    for (var i = depth; i--; i >= 0) {\n        indentationForDepth = \"\" + indentationForDepth + constants_1.indentation;\n    }\n    return indentationForDepth;\n}\nexports.getIndentationForDepth = getIndentationForDepth;\nfunction getTime() {\n    if (typeof window !== \"undefined\") {\n        return window.performance.now();\n    }\n    else if (typeof process !== \"undefined\") {\n        var nanoseconds = process.hrtime()[1];\n        var milliseconds = nanoseconds / 1000000;\n        return milliseconds;\n    }\n    else {\n        return new Date().getTime();\n    }\n}\nexports.getTime = getTime;\nfunction getTimeDiference(start, end) {\n    var diff = end - start;\n    var formatted = diff.toFixed(2);\n    return formatted;\n}\nexports.getTimeDiference = getTimeDiference;\nfunction makePropertyLogger(indentationForDepth) {\n    return function (log, tabCount, key, value) {\n        var line = \"\" + log + indentationForDepth;\n        for (var i = tabCount; i > 0; i--) {\n            line = \"\" + line + constants_1.indentation;\n        }\n        line = \"\" + line + constants_1.tree.item + \" \" + key;\n        if (value !== undefined) {\n            line = line + \" : \" + yellow(value.toString());\n        }\n        return line + \"\\n\";\n    };\n}\nexports.makePropertyLogger = makePropertyLogger;\n\n}).call(this,require('_process'))\n\n},{\"./constants\":10,\"_process\":6,\"chalk\":3}]},{},[13])(13)\n});\n\n","'use strict';\n\nfunction assembleStyles () {\n\tvar styles = {\n\t\tmodifiers: {\n\t\t\treset: [0, 0],\n\t\t\tbold: [1, 22], // 21 isn't widely supported and 22 does the same thing\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolors: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39]\n\t\t},\n\t\tbgColors: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49]\n\t\t}\n\t};\n\n\t// fix humans\n\tstyles.colors.grey = styles.colors.gray;\n\n\tObject.keys(styles).forEach(function (groupName) {\n\t\tvar group = styles[groupName];\n\n\t\tObject.keys(group).forEach(function (styleName) {\n\t\t\tvar style = group[styleName];\n\n\t\t\tstyles[styleName] = group[styleName] = {\n\t\t\t\topen: '\\u001b[' + style[0] + 'm',\n\t\t\t\tclose: '\\u001b[' + style[1] + 'm'\n\t\t\t};\n\t\t});\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t});\n\n\treturn styles;\n}\n\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\nvar escapeStringRegexp = require('escape-string-regexp');\nvar ansiStyles = require('ansi-styles');\nvar stripAnsi = require('strip-ansi');\nvar hasAnsi = require('has-ansi');\nvar supportsColor = require('supports-color');\nvar defineProps = Object.defineProperties;\nvar isSimpleWindowsTerm = process.platform === 'win32' && !/^xterm/i.test(process.env.TERM);\n\nfunction Chalk(options) {\n\t// detect mode if not set manually\n\tthis.enabled = !options || options.enabled === undefined ? supportsColor : options.enabled;\n}\n\n// use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001b[94m';\n}\n\nvar styles = (function () {\n\tvar ret = {};\n\n\tObject.keys(ansiStyles).forEach(function (key) {\n\t\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\t\tret[key] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, this._styles.concat(key));\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n})();\n\nvar proto = defineProps(function chalk() {}, styles);\n\nfunction build(_styles) {\n\tvar builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder.enabled = this.enabled;\n\t// __proto__ is used because we must return a function, but there is\n\t// no way to create a function with a different prototype.\n\t/* eslint-disable no-proto */\n\tbuilder.__proto__ = proto;\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// support varags, but simply cast to string in case there's only one arg\n\tvar args = arguments;\n\tvar argsLen = args.length;\n\tvar str = argsLen !== 0 && String(arguments[0]);\n\n\tif (argsLen > 1) {\n\t\t// don't slice `arguments`, it prevents v8 optimizations\n\t\tfor (var a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || !str) {\n\t\treturn str;\n\t}\n\n\tvar nestedStyles = this._styles;\n\tvar i = nestedStyles.length;\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tvar originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && (nestedStyles.indexOf('gray') !== -1 || nestedStyles.indexOf('grey') !== -1)) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\twhile (i--) {\n\t\tvar code = ansiStyles[nestedStyles[i]];\n\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\t}\n\n\t// Reset the original 'dim' if we changed it to work around the Windows dimmed gray issue.\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction init() {\n\tvar ret = {};\n\n\tObject.keys(styles).forEach(function (name) {\n\t\tret[name] = {\n\t\t\tget: function () {\n\t\t\t\treturn build.call(this, [name]);\n\t\t\t}\n\t\t};\n\t});\n\n\treturn ret;\n}\n\ndefineProps(Chalk.prototype, init());\n\nmodule.exports = new Chalk();\nmodule.exports.styles = ansiStyles;\nmodule.exports.hasColor = hasAnsi;\nmodule.exports.stripColor = stripAnsi;\nmodule.exports.supportsColor = supportsColor;\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict';\nvar ansiRegex = require('ansi-regex');\nvar re = new RegExp(ansiRegex().source); // remove the `g` flag\nmodule.exports = re.test.bind(re);\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\nvar ansiRegex = require('ansi-regex')();\n\nmodule.exports = function (str) {\n\treturn typeof str === 'string' ? str.replace(ansiRegex, '') : str;\n};\n","'use strict';\nvar argv = process.argv;\n\nvar terminator = argv.indexOf('--');\nvar hasFlag = function (flag) {\n\tflag = '--' + flag;\n\tvar pos = argv.indexOf(flag);\n\treturn pos !== -1 && (terminator !== -1 ? pos < terminator : true);\n};\n\nmodule.exports = (function () {\n\tif ('FORCE_COLOR' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (hasFlag('no-color') ||\n\t\thasFlag('no-colors') ||\n\t\thasFlag('color=false')) {\n\t\treturn false;\n\t}\n\n\tif (hasFlag('color') ||\n\t\thasFlag('colors') ||\n\t\thasFlag('color=true') ||\n\t\thasFlag('color=always')) {\n\t\treturn true;\n\t}\n\n\tif (process.stdout && !process.stdout.isTTY) {\n\t\treturn false;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn true;\n\t}\n\n\tif ('COLORTERM' in process.env) {\n\t\treturn true;\n\t}\n\n\tif (process.env.TERM === 'dumb') {\n\t\treturn false;\n\t}\n\n\tif (/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM)) {\n\t\treturn true;\n\t}\n\n\treturn false;\n})();\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { makePropertyLogger } from \"./utils\";\r\n\r\nfunction scopeToString(scope: number) {\r\n    switch (scope) {\r\n        case 1:\r\n            return \"Singleton\";\r\n        case 0:\r\n        default:\r\n            return \"Transient\";\r\n    }\r\n}\r\n\r\nfunction bindingTypeToString(type: number) {\r\n    switch (type) {\r\n        case 1:\r\n            return \"Instance\";\r\n        case 2:\r\n            return \"ConstantValue\";\r\n        case 3:\r\n            return \"DynamicValue\";\r\n        case 4:\r\n            return \"Constructor\";\r\n        case 5:\r\n            return \"Factory\";\r\n        case 6:\r\n            return \"Provider\";\r\n        case 0:\r\n        default:\r\n            return \"Invalid\";\r\n    }\r\n}\r\n\r\nfunction getBindingLogEntry(\r\n    log: string,\r\n    options: ILoggerSettings,\r\n    index: number,\r\n    binding: inversify.IBinding<any>,\r\n    indentationForDepth: string\r\n) {\r\n\r\n    let logProperty = makePropertyLogger(indentationForDepth);\r\n\r\n    log = logProperty(log, 0, \"item\", index);\r\n\r\n    let props = [\r\n        \"type\", \"serviceIdentifier\", \"implementationType\",\r\n        \"activated\", \"cache\", \"constraint\", \"dynamicValue\",\r\n        \"factory\", \"onActivation\", \"provider\", \"scope\"\r\n    ];\r\n\r\n    props.forEach((prop) => {\r\n\r\n        let _bindings: any = options.request.bindings;\r\n        let _binding: any = binding;\r\n\r\n        if (_bindings[prop]) {\r\n\r\n            let value = _binding[prop];\r\n\r\n            switch (prop) {\r\n                case \"scope\":\r\n                    value = scopeToString(_binding[prop]);\r\n                    break;\r\n                 case \"type\":\r\n                    value = bindingTypeToString(_binding[prop]);\r\n                    break;\r\n                 case \"implementationType\":\r\n                    value = (_binding[prop].name || \"undefined\");\r\n                    break;\r\n                default:\r\n                    value = _binding[prop];\r\n                    break;\r\n            }\r\n\r\n            value = (value === null || value === undefined) ? \"null\" : value;\r\n            log = logProperty(log, 1, prop, value);\r\n        }\r\n    });\r\n\r\n    return log;\r\n\r\n}\r\n\r\nexport default getBindingLogEntry;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nlet tree = {\r\n    item: \"└──\"\r\n};\r\n\r\nlet indentation  = \"    \";\r\n\r\nexport { tree, indentation };\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nfunction consoleRenderer(out: string) {\r\n    console.log(out);\r\n}\r\n\r\nexport default consoleRenderer;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nlet deatultOptions: ILoggerSettings = {\r\n    request: {\r\n        bindings: {\r\n            activated: false,\r\n            cache: false,\r\n            constraint: false,\r\n            dynamicValue: false,\r\n            factory: false,\r\n            implementationType: true,\r\n            onActivation: false,\r\n            provider: false,\r\n            scope: false,\r\n            serviceIdentifier: false,\r\n            type: false\r\n        },\r\n        serviceIdentifier: true,\r\n        target: {\r\n            metadata: true,\r\n            name: false,\r\n            serviceIdentifier: false\r\n        }\r\n    },\r\n    time: true\r\n};\r\n\r\nexport default deatultOptions;\r\n","/// <reference path=\"./interfaces.d.ts\" />\n\nimport deatultOptions from \"./default_settings\";\nimport consoleRenderer from \"./default_renderer\";\nimport { tree } from \"./constants\";\nimport getRequestLogEntry from \"./request_logger\";\nimport { getTime, getTimeDiference } from \"./utils\";\n\nfunction makeLoggerMiddleware(settings?: ILoggerSettings, renderer?: (out: string) => void): inversify.IMiddleware {\n\n    let logger = function (next: (context: inversify.IContext) => any) {\n        return function (context: inversify.IContext) {\n\n            if (settings === undefined || settings === null) { settings = deatultOptions; };\n            if (renderer === undefined || renderer === null) { renderer = consoleRenderer; };\n\n            let start =  getTime();\n            let result = next(context);\n            let end = getTime();\n            let log = getRequestLogEntry(`${tree.item} plan\\n`, settings, context.plan.rootRequest, 0, 0);\n\n            if (settings.time) {\n                log = `${log}\\n Time: ${getTimeDiference(start, end)} millisecond/s.\\n`;\n            }\n\n            renderer(log);\n            return result;\n\n        };\n    };\n\n    return logger;\n\n}\n\nexport default makeLoggerMiddleware;\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { indentation } from \"./constants\";\r\nimport { getIndentationForDepth } from \"./utils\";\r\nimport getBindingLogEntry from \"./binding_logger\";\r\nimport getTargetLogEntry from \"./target_logger\";\r\nimport { makePropertyLogger } from \"./utils\";\r\n\r\nfunction getRequestLogEntry(\r\n    log: string,\r\n    options: ILoggerSettings,\r\n    request: inversify.IRequest,\r\n    depth: number,\r\n    index: number\r\n): string {\r\n\r\n    let indentationForDepth = getIndentationForDepth(depth);\r\n    let logProperty = makePropertyLogger(indentationForDepth);\r\n\r\n    log = logProperty(log, 0, \"item\", index);\r\n\r\n    if (options.request.serviceIdentifier === true) {\r\n        log = logProperty(log, 1, \"serviceIdentifier\", request.serviceIdentifier);\r\n    }\r\n\r\n    // bindings\r\n    if (options.request.bindings !== undefined) {\r\n        log = logProperty(log, 1, \"bindings\");\r\n        request.bindings.forEach((binding: inversify.IBinding<any>, i: number) => {\r\n            log = getBindingLogEntry(log, options, i, binding, `${indentationForDepth}${indentation}${indentation}`);\r\n        });\r\n    }\r\n\r\n    // target\r\n    if (options.request.target !== undefined && request.target !== null) {\r\n        log = getTargetLogEntry(log, options, request.target, `${indentationForDepth}${indentation}`);\r\n    }\r\n\r\n    // child requests\r\n    if (request.childRequests.length > 0) {\r\n        log = logProperty(log, 1, \"childRequests\");\r\n    }\r\n\r\n    request.childRequests.forEach((childRequest, i) => {\r\n        log = getRequestLogEntry(log, options, childRequest, (depth + 2), i);\r\n    });\r\n\r\n    return log;\r\n\r\n}\r\n\r\nexport default getRequestLogEntry;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { makePropertyLogger } from \"./utils\";\r\n\r\nfunction getTargetLogEntry(\r\n    log: string,\r\n    options: ILoggerSettings,\r\n    target: inversify.ITarget,\r\n    indentationForDepth: string\r\n) {\r\n\r\n    let logProperty = makePropertyLogger(indentationForDepth);\r\n\r\n    log = logProperty(log, 0, \"target\");\r\n\r\n    if (options.request.target.name) {\r\n        log = logProperty(log, 1, \"name\", (target.name.value() || \"undefined\"));\r\n    }\r\n\r\n    if (options.request.target.serviceIdentifier) {\r\n        log = logProperty(log, 1, \"serviceIdentifier\", target.serviceIdentifier);\r\n    }\r\n\r\n    if (options.request.target.metadata && Array.isArray(target.metadata)) {\r\n        log = logProperty(log, 1, \"metadata\");\r\n        target.metadata.forEach((m: inversify.IMetadata, i: number) => {\r\n            log = logProperty(log, 2, \"item\", i);\r\n            log = logProperty(log, 3, \"key\", m.key);\r\n            log = logProperty(log, 3, \"value\", m.value);\r\n        });\r\n    }\r\n\r\n    return log;\r\n\r\n}\r\n\r\nexport default getTargetLogEntry;\r\n","/// <reference path=\"./interfaces.d.ts\" />\r\n\r\nimport { tree, indentation } from \"./constants\";\r\nimport * as chalk from \"chalk\";\r\n\r\nlet yellow  = chalk.yellow;\r\n\r\ndeclare var process: any;\r\ndeclare var window: any;\r\n\r\nfunction getIndentationForDepth(depth: number) {\r\n    let indentationForDepth = indentation;\r\n    for (let i = depth; i--; i >= 0) {\r\n        indentationForDepth = `${indentationForDepth}${indentation}`;\r\n    }\r\n    return indentationForDepth;\r\n}\r\n\r\nfunction getTime() {\r\n\r\n    if (typeof window !== \"undefined\") {\r\n\r\n        // modern browsers\r\n        return window.performance.now();\r\n\r\n    } else if (typeof process !== \"undefined\") {\r\n\r\n        // node\r\n        let nanoseconds = process.hrtime()[1];\r\n        let milliseconds = nanoseconds / 1000000;\r\n        return milliseconds;\r\n\r\n    } else {\r\n\r\n        // old browsers\r\n        return new Date().getTime();\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction getTimeDiference( start: number, end: number) {\r\n    let diff = end - start;\r\n    let formatted = diff.toFixed(2);\r\n    return formatted;\r\n}\r\n\r\nfunction makePropertyLogger(indentationForDepth: string) {\r\n    return function (log: string, tabCount: number, key: string, value?: any) {\r\n\r\n        let line = `${log}${indentationForDepth}`;\r\n\r\n        for (let i = tabCount; i > 0; i--) {\r\n            line = `${line}${indentation}`;\r\n        }\r\n\r\n        line = `${line}${tree.item} ${key}`;\r\n\r\n        if (value !== undefined) {\r\n            line = `${line} : ${yellow(value.toString())}`;\r\n        }\r\n\r\n        return `${line}\\n`;\r\n    };\r\n}\r\n\r\nexport { getIndentationForDepth, getTime, getTimeDiference, makePropertyLogger };\r\n"],"sourceRoot":"/source/"}